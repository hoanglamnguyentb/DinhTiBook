import { provide as m, inject as v, defineComponent as f, ref as c, onMounted as S, onActivated as b, onDeactivated as g, h, renderSlot as w } from "vue";
import y from "simplebar";
const s = Symbol("simplebar");
function E(t) {
  m(s, t);
}
function C() {
  return v(s);
}
const H = f({
  name: "SimpleBar",
  props: {
    tag: {
      type: String,
      default: "div"
    },
    options: {
      type: Object,
      default: void 0
    }
  },
  emits: {
    scroll: null,
    wheel: null,
    created: null
  },
  setup(t, { emit: n, slots: u, expose: d }) {
    const e = c(null), l = c(null);
    d(e), E(e);
    const a = (p) => {
      if (!l.value || p === "activated" && e.value)
        return;
      const o = new y(l.value, t.options);
      e.value = o;
      const i = o.getScrollElement();
      i.addEventListener("scroll", (r) => {
        n("scroll", r);
      }), i.addEventListener("wheel", (r) => {
        n("wheel", r);
      }), n("created", o);
    };
    return S(() => a("mounted")), b(() => a("activated")), g(() => {
      e.value = null;
    }), () => h(
      t.tag,
      {
        ref: l
      },
      w(u, "default", { instance: e.value })
    );
  }
});
export {
  H as SimpleBar,
  C as useSimplebar
};
