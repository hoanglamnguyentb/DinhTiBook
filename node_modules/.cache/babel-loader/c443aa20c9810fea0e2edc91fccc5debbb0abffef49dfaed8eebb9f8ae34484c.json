{"ast":null,"code":"import APIService from \"@/helpers/ApiService\";\nexport default {\n  data() {\n    return {\n      open: false,\n      labelCol: {\n        span: 6\n      },\n      wrapperCol: {\n        span: 14\n      },\n      matkhau: {\n        oldPassword: \"\",\n        newPassword: \"\",\n        confirmPassword: \"\"\n      },\n      rules: {\n        oldPassword: [{\n          required: true,\n          message: \"Nhập mật khẩu cũ!\"\n        }, {\n          min: 6,\n          max: 20,\n          message: \"Độ dài từ 6-20 kí tự\"\n        }],\n        newPassword: [{\n          required: true,\n          message: \"Nhập mật khẩu mới!\"\n        }, {\n          min: 6,\n          max: 20,\n          message: \"Độ dài từ 6-20 kí tự\"\n        }],\n        confirmPassword: [{\n          required: true,\n          message: \"Nhập lại mật khẩu mới!\"\n        }, {\n          min: 6,\n          max: 20,\n          message: \"Độ dài từ 6-20 kí tự\"\n        }, {\n          validator: this.validateConfirmPassword,\n          message: \"Mật khẩu mới không trùng khớp!\"\n        }]\n      }\n    };\n  },\n  methods: {\n    async showModal() {\n      this.open = true;\n    },\n    closeModal() {\n      this.open = false;\n    },\n    handleOk() {\n      this.$refs.formRef.validate().then(async () => {\n        try {\n          if (this.matkhau.newPassword != this.matkhau.confirmPassword) {\n            this.$message.error(\"Mật khẩu nhập lại không trùng khớp!\");\n          } else {\n            var result = await APIService.put(`/user/ChangePassword`, this.matkhau);\n            if (result.data.status === \"Error\") {\n              // Nếu kết quả trả về là lỗi\n              if (result.data.code === 0) {\n                // Kiểm tra mã lỗi\n                this.$message.error(result.data.message); // Hiển thị thông báo lỗi\n              }\n            }\n            this.$message.success(result.data.message);\n            this.closeModal();\n            this.$emit(\"addSuccess\");\n          }\n        } catch (error) {\n          console.log(\"error\", error);\n        }\n      });\n    },\n    resetForm() {\n      this.$refs.formRef.resetFields();\n    }\n  }\n};","map":{"version":3,"names":["APIService","data","open","labelCol","span","wrapperCol","matkhau","oldPassword","newPassword","confirmPassword","rules","required","message","min","max","validator","validateConfirmPassword","methods","showModal","closeModal","handleOk","$refs","formRef","validate","then","$message","error","result","put","status","code","success","$emit","console","log","resetForm","resetFields"],"sources":["C:\\Users\\Admin\\Desktop\\DoAnClient\\client\\src\\views\\dashboard\\account\\ModalChangePassword.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <a-modal v-model:open=\"open\" title=\"Đổi mật khẩu\" @ok=\"handleOk\" @cancel=\"closeModal\">\r\n      <a-form ref=\"formRef\" :model=\"matkhau\" :rules=\"rules\" layout=\"vertical\">\r\n        <a-form-item ref=\"oldPassword\" label=\"Mật khẩu cũ ( chưa trả về lỗi khi nhập mk cũ sai )\"  name=\"oldPassword\">\r\n          <a-input v-model:value=\"matkhau.oldPassword\" />\r\n        </a-form-item>\r\n        <a-form-item ref=\"newPassword\" label=\"Mật khẩu mới\" name=\"newPassword\">\r\n          <a-input v-model:value=\"matkhau.newPassword\" />\r\n        </a-form-item>\r\n        <a-form-item\r\n          ref=\"confirmPassword\"\r\n          label=\"Nhập lại mật khẩu mới\"\r\n          name=\"confirmPassword\"\r\n        >\r\n          <a-input v-model:value=\"matkhau.confirmPassword\" />\r\n        </a-form-item>\r\n      </a-form>\r\n    </a-modal>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport APIService from \"@/helpers/ApiService\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      open: false,\r\n      labelCol: {\r\n        span: 6,\r\n      },\r\n      wrapperCol: {\r\n        span: 14,\r\n      },\r\n      matkhau: {\r\n        oldPassword: \"\",\r\n        newPassword: \"\",\r\n        confirmPassword: \"\",\r\n      },\r\n      rules: {\r\n        oldPassword: [\r\n          { required: true, message: \"Nhập mật khẩu cũ!\" },\r\n          { min: 6, max: 20, message: \"Độ dài từ 6-20 kí tự\" },\r\n        ],\r\n        newPassword: [\r\n          { required: true, message: \"Nhập mật khẩu mới!\" },\r\n          { min: 6, max: 20, message: \"Độ dài từ 6-20 kí tự\" },\r\n        ],\r\n        confirmPassword: [\r\n          { required: true, message: \"Nhập lại mật khẩu mới!\" },\r\n          { min: 6, max: 20, message: \"Độ dài từ 6-20 kí tự\" },\r\n          {\r\n            validator: this.validateConfirmPassword,\r\n            message: \"Mật khẩu mới không trùng khớp!\",\r\n          },\r\n        ],\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    async showModal() {\r\n      this.open = true;\r\n    },\r\n    closeModal() {\r\n      this.open = false;\r\n    },\r\n    handleOk() {\r\n      this.$refs.formRef.validate().then(async () => {\r\n        try {\r\n          if (this.matkhau.newPassword != this.matkhau.confirmPassword) {\r\n            this.$message.error(\"Mật khẩu nhập lại không trùng khớp!\");\r\n          } \r\n          else {\r\n            var result = await APIService.put(`/user/ChangePassword`, this.matkhau);\r\n            if (result.data.status === \"Error\") {\r\n        // Nếu kết quả trả về là lỗi\r\n        if (result.data.code === 0) {\r\n          // Kiểm tra mã lỗi\r\n          this.$message.error(result.data.message); // Hiển thị thông báo lỗi\r\n          \r\n        }\r\n      }\r\n            this.$message.success(result.data.message);\r\n            this.closeModal();\r\n            this.$emit(\"addSuccess\");\r\n          }\r\n        } catch (error) {\r\n          console.log(\"error\", error);\r\n        }\r\n      });\r\n    },\r\n    resetForm() {\r\n      this.$refs.formRef.resetFields();\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"],"mappings":"AAuBA,OAAOA,UAAS,MAAO,sBAAsB;AAC7C,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,KAAK;MACXC,QAAQ,EAAE;QACRC,IAAI,EAAE;MACR,CAAC;MACDC,UAAU,EAAE;QACVD,IAAI,EAAE;MACR,CAAC;MACDE,OAAO,EAAE;QACPC,WAAW,EAAE,EAAE;QACfC,WAAW,EAAE,EAAE;QACfC,eAAe,EAAE;MACnB,CAAC;MACDC,KAAK,EAAE;QACLH,WAAW,EAAE,CACX;UAAEI,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE;QAAoB,CAAC,EAChD;UAAEC,GAAG,EAAE,CAAC;UAAEC,GAAG,EAAE,EAAE;UAAEF,OAAO,EAAE;QAAuB,CAAC,CACrD;QACDJ,WAAW,EAAE,CACX;UAAEG,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE;QAAqB,CAAC,EACjD;UAAEC,GAAG,EAAE,CAAC;UAAEC,GAAG,EAAE,EAAE;UAAEF,OAAO,EAAE;QAAuB,CAAC,CACrD;QACDH,eAAe,EAAE,CACf;UAAEE,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE;QAAyB,CAAC,EACrD;UAAEC,GAAG,EAAE,CAAC;UAAEC,GAAG,EAAE,EAAE;UAAEF,OAAO,EAAE;QAAuB,CAAC,EACpD;UACEG,SAAS,EAAE,IAAI,CAACC,uBAAuB;UACvCJ,OAAO,EAAE;QACX,CAAC;MAEL;IACF,CAAC;EACH,CAAC;EACDK,OAAO,EAAE;IACP,MAAMC,SAASA,CAAA,EAAG;MAChB,IAAI,CAAChB,IAAG,GAAI,IAAI;IAClB,CAAC;IACDiB,UAAUA,CAAA,EAAG;MACX,IAAI,CAACjB,IAAG,GAAI,KAAK;IACnB,CAAC;IACDkB,QAAQA,CAAA,EAAG;MACT,IAAI,CAACC,KAAK,CAACC,OAAO,CAACC,QAAQ,CAAC,CAAC,CAACC,IAAI,CAAC,YAAY;QAC7C,IAAI;UACF,IAAI,IAAI,CAAClB,OAAO,CAACE,WAAU,IAAK,IAAI,CAACF,OAAO,CAACG,eAAe,EAAE;YAC5D,IAAI,CAACgB,QAAQ,CAACC,KAAK,CAAC,qCAAqC,CAAC;UAC5D,OACK;YACH,IAAIC,MAAK,GAAI,MAAM3B,UAAU,CAAC4B,GAAG,CAAE,sBAAqB,EAAE,IAAI,CAACtB,OAAO,CAAC;YACvE,IAAIqB,MAAM,CAAC1B,IAAI,CAAC4B,MAAK,KAAM,OAAO,EAAE;cACxC;cACA,IAAIF,MAAM,CAAC1B,IAAI,CAAC6B,IAAG,KAAM,CAAC,EAAE;gBAC1B;gBACA,IAAI,CAACL,QAAQ,CAACC,KAAK,CAACC,MAAM,CAAC1B,IAAI,CAACW,OAAO,CAAC,EAAE;cAE5C;YACF;YACM,IAAI,CAACa,QAAQ,CAACM,OAAO,CAACJ,MAAM,CAAC1B,IAAI,CAACW,OAAO,CAAC;YAC1C,IAAI,CAACO,UAAU,CAAC,CAAC;YACjB,IAAI,CAACa,KAAK,CAAC,YAAY,CAAC;UAC1B;QACF,EAAE,OAAON,KAAK,EAAE;UACdO,OAAO,CAACC,GAAG,CAAC,OAAO,EAAER,KAAK,CAAC;QAC7B;MACF,CAAC,CAAC;IACJ,CAAC;IACDS,SAASA,CAAA,EAAG;MACV,IAAI,CAACd,KAAK,CAACC,OAAO,CAACc,WAAW,CAAC,CAAC;IAClC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}