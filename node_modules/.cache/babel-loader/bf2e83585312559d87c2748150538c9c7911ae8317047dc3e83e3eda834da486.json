{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-38bc6d5c\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"steps-content\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h4\", null, \"Dữ liệu hợp lệ\", -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h4\", null, \"Dữ liệu sai\", -1 /* HOISTED */));\nconst _hoisted_6 = {\n  class: \"steps-action\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_a_steps = _resolveComponent(\"a-steps\");\n  const _component_DownloadOutlined = _resolveComponent(\"DownloadOutlined\");\n  const _component_a_button = _resolveComponent(\"a-button\");\n  const _component_a_form_item = _resolveComponent(\"a-form-item\");\n  const _component_UploadOutlined = _resolveComponent(\"UploadOutlined\");\n  const _component_a_form = _resolveComponent(\"a-form\");\n  const _component_a_table = _resolveComponent(\"a-table\");\n  const _component_a_card = _resolveComponent(\"a-card\");\n  const _component_a_tag = _resolveComponent(\"a-tag\");\n  const _component_a_spin = _resolveComponent(\"a-spin\");\n  return _openBlock(), _createBlock(_component_a_card, {\n    title: \"Import danh mục dùng chung\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_a_spin, {\n      spinning: $data.loading,\n      size: \"large\"\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", null, [_createVNode(_component_a_steps, {\n        current: $data.current,\n        items: $options.items\n      }, null, 8 /* PROPS */, [\"current\", \"items\"]), _createElementVNode(\"div\", _hoisted_1, [$data.current == 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode(_component_a_form, {\n        \"label-col\": $data.labelCol,\n        \"wrapper-col\": $data.wrapperCol,\n        ref: \"formRef\",\n        layout: \"horizontal\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_form_item, {\n          ref: \"maHuyen\",\n          label: \"Mẫu file Excel\",\n          style: {\n            \"margin-top\": \"10px\"\n          }\n        }, {\n          default: _withCtx(() => [_createVNode(_component_a_button, {\n            style: {\n              \"color\": \"#1677ff\"\n            },\n            size: \"large\",\n            onClick: $options.downloadTemplate\n          }, {\n            icon: _withCtx(() => [_createVNode(_component_DownloadOutlined)]),\n            default: _withCtx(() => [_createTextVNode(\" DanhMuc_Template.xlsx \")]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"onClick\"])]),\n          _: 1 /* STABLE */\n        }, 512 /* NEED_PATCH */), _createVNode(_component_a_form_item, {\n          ref: \"fileNameUploaded\",\n          label: \"Tệp nhập dữ liệu\",\n          name: \"fileNameUploaded\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_a_button, {\n            size: \"large\",\n            style: {\n              \"color\": \"#1677ff\"\n            },\n            onClick: _cache[1] || (_cache[1] = $event => _ctx.$refs.inpFile.click())\n          }, {\n            icon: _withCtx(() => [_createVNode(_component_UploadOutlined)]),\n            default: _withCtx(() => [_createTextVNode(\" \" + _toDisplayString($data.dataImport.fileNameUploaded ? $data.dataImport.fileNameUploaded : 'Chọn file dữ liệu') + \" \", 1 /* TEXT */), _createElementVNode(\"input\", {\n              ref: \"inpFile\",\n              id: \"inpFile\",\n              accept: \".xlsx,.xls\",\n              type: \"file\",\n              onChange: _cache[0] || (_cache[0] = (...args) => $options.upload && $options.upload(...args)),\n              style: {\n                \"display\": \"none\"\n              }\n            }, null, 544 /* NEED_HYDRATION, NEED_PATCH */)]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        }, 512 /* NEED_PATCH */)]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"label-col\", \"wrapper-col\"])])) : _createCommentVNode(\"v-if\", true), $data.current == 1 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createVNode(_component_a_card, null, {\n        default: _withCtx(() => [_createVNode(_component_a_table, {\n          class: \"huyen-table\",\n          columns: $data.columns,\n          \"data-source\": $data.dataImport.danhMucs,\n          scroll: {\n            x: 1000\n          },\n          \"row-selection\": $options.rowSelection,\n          tableLayout: \"fixed\",\n          rowKey: \"maDM\"\n        }, {\n          title: _withCtx(() => [_hoisted_4]),\n          footer: _withCtx(() => [_createVNode(_component_a_button, {\n            disabled: $data.dataImport.danhMucs.length <= 0,\n            onClick: $options.save,\n            type: \"primary\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Cập nhật\")]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"disabled\", \"onClick\"])]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"columns\", \"data-source\", \"row-selection\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_a_card, {\n        style: {\n          \"margin-top\": \"10px\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_table, {\n          class: \"huyen-table-error\",\n          columns: $data.columnsError,\n          \"data-source\": $data.dataImport.errorData,\n          pagination: {\n            pageSize: 50\n          },\n          scroll: {\n            x: 1000\n          },\n          tableLayout: \"fixed\",\n          rowKey: \"maDM\"\n        }, {\n          title: _withCtx(() => [_hoisted_5]),\n          footer: _withCtx(() => [_createVNode(_component_a_button, {\n            type: \"primary\",\n            onClick: $options.exportExcel,\n            danger: \"\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Tải file lỗi\")]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"onClick\"])]),\n          bodyCell: _withCtx(({\n            column,\n            record\n          }) => [column.key === 'errorFields' ? (_openBlock(true), _createElementBlock(_Fragment, {\n            key: 0\n          }, _renderList(record.errorFields, errorField => {\n            return _openBlock(), _createBlock(_component_a_tag, {\n              key: errorField,\n              color: \"red\"\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString(errorField), 1 /* TEXT */)]),\n              _: 2 /* DYNAMIC */\n            }, 1024 /* DYNAMIC_SLOTS */);\n          }), 128 /* KEYED_FRAGMENT */)) : _createCommentVNode(\"v-if\", true)]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"columns\", \"data-source\"])]),\n        _: 1 /* STABLE */\n      })])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_6, [$data.current < $data.steps.length - 1 ? (_openBlock(), _createBlock(_component_a_button, {\n        key: 0,\n        type: \"primary\",\n        onClick: $options.next\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"Tiếp tục\")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true), $data.current > 0 ? (_openBlock(), _createBlock(_component_a_button, {\n        key: 1,\n        style: {\n          \"margin-left\": \"8px\"\n        },\n        onClick: $options.prev\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"Quay lại\")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_a_button, {\n        style: {\n          \"margin-left\": \"8px\"\n        },\n        onClick: $options.closeImport\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"Đóng\")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])])])]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"spinning\"])]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["class","_createElementVNode","_createBlock","_component_a_card","title","_createVNode","_component_a_spin","spinning","$data","loading","size","_component_a_steps","current","items","$options","_hoisted_1","_createElementBlock","_hoisted_2","_component_a_form","labelCol","wrapperCol","ref","layout","_component_a_form_item","label","style","_component_a_button","onClick","downloadTemplate","icon","_withCtx","_component_DownloadOutlined","name","_cache","$event","_ctx","$refs","inpFile","click","_component_UploadOutlined","_toDisplayString","dataImport","fileNameUploaded","id","accept","type","onChange","args","upload","_hoisted_3","_component_a_table","columns","danhMucs","scroll","x","rowSelection","tableLayout","rowKey","_hoisted_4","footer","disabled","length","save","columnsError","errorData","pagination","pageSize","_hoisted_5","exportExcel","danger","bodyCell","column","record","key","_Fragment","_renderList","errorFields","errorField","_component_a_tag","color","_hoisted_6","steps","next","prev","closeImport"],"sources":["D:\\DA\\DoAnFrontEnd\\DoAnClient\\client\\src\\views\\dashboard\\QL_DanhMuc\\ModalImportDanhMuc.vue"],"sourcesContent":["<template>\r\n    <a-card title=\"Import danh mục dùng chung\">\r\n      <a-spin :spinning=\"loading\" size=\"large\">\r\n       \r\n        <div>\r\n          <a-steps :current=\"current\" :items=\"items\"></a-steps>\r\n          <div class=\"steps-content\">\r\n            <div v-if=\"current == 0\">\r\n              <a-form :label-col=\"labelCol\" :wrapper-col=\"wrapperCol\" ref=\"formRef\" layout=\"horizontal\">\r\n                <a-form-item ref=\"maHuyen\" label=\"Mẫu file Excel\" style=\"margin-top: 10px;\">\r\n                  <a-button style=\"color: #1677ff;\" size=\"large\" @click=\"downloadTemplate\">\r\n                    <template #icon>\r\n                      <DownloadOutlined />\r\n                    </template>\r\n                    DanhMuc_Template.xlsx\r\n                  </a-button>\r\n                </a-form-item>\r\n                <a-form-item ref=\"fileNameUploaded\" label=\"Tệp nhập dữ liệu\" name=\"fileNameUploaded\">\r\n                  <a-button size=\"large\" style=\"color: #1677ff;\" @click=\"$refs.inpFile.click()\">\r\n                    <template #icon>\r\n                      <UploadOutlined />\r\n                    </template>\r\n                    {{ dataImport.fileNameUploaded ? dataImport.fileNameUploaded : 'Chọn file dữ liệu' }}\r\n                    <input ref=\"inpFile\" id=\"inpFile\" accept=\".xlsx,.xls\" type=\"file\" @change=\"upload\"\r\n                      style=\"display: none\" />\r\n                  </a-button>\r\n                </a-form-item>\r\n              </a-form>\r\n            </div>\r\n            <div v-if=\"current == 1\">\r\n              <a-card>\r\n                <a-table class=\"huyen-table\" :columns=\"columns\" :data-source=\"dataImport.danhMucs\"\r\n                  :scroll=\"{ x: 1000 }\" :row-selection=\"rowSelection\" tableLayout=\"fixed\" rowKey=\"maDM\">\r\n                  <template #title>\r\n                    <h4>Dữ liệu hợp lệ</h4>\r\n                  </template>\r\n                  <template #footer>\r\n                    <a-button :disabled=\"dataImport.danhMucs.length <= 0\" @click=\"save\" type=\"primary\">Cập nhật</a-button>\r\n                  </template>\r\n                </a-table>\r\n              </a-card>\r\n              <a-card style=\"margin-top: 10px;\">\r\n                <a-table class=\"huyen-table-error\" :columns=\"columnsError\" :data-source=\"dataImport.errorData\"\r\n                  :pagination=\"{ pageSize: 50 }\" :scroll=\"{ x: 1000}\" tableLayout=\"fixed\" rowKey=\"maDM\">\r\n                  <template #title>\r\n                    <h4>Dữ liệu sai</h4>\r\n                  </template>\r\n                  <template #footer>\r\n                    <a-button type=\"primary\" @click=\"exportExcel\" danger>Tải file lỗi</a-button>\r\n                  </template>\r\n                  <template #bodyCell=\"{ column, record }\">\r\n                    <template v-if=\"column.key === 'errorFields'\">\r\n                      <a-tag v-for=\"errorField in record.errorFields\" :key=\"errorField\" color=\"red\">{{\r\n                        errorField\r\n                      }}</a-tag>\r\n                    </template>\r\n                  </template>\r\n                </a-table>\r\n              </a-card>\r\n            </div>\r\n          </div>\r\n          <div class=\"steps-action\">\r\n            <a-button v-if=\"current < steps.length - 1\" type=\"primary\" @click=\"next\">Tiếp tục</a-button>\r\n            <a-button v-if=\"current > 0\" style=\"margin-left: 8px\" @click=\"prev\">Quay lại</a-button>\r\n            <a-button style=\"margin-left: 8px\"  @click=\"closeImport\">Đóng</a-button>\r\n          </div>\r\n        </div>\r\n      </a-spin>\r\n    </a-card>\r\n  </template>\r\n  \r\n  <script>\r\n  \r\n  const ExcelJS = require('exceljs')\r\n  import { DownloadOutlined, UploadOutlined, SearchOutlined} from '@ant-design/icons-vue';\r\n  import APIService from \"@/helpers/ApiService\"\r\n  \r\n  \r\n  export default {\r\n    components: {\r\n      DownloadOutlined,\r\n      UploadOutlined\r\n    },\r\n    data() {\r\n      return {\r\n        current: 0,\r\n        open: false,\r\n        loading: false,\r\n        labelCol: { span: 3 },\r\n        wrapperCol: { span: 3 },\r\n        rules: {\r\n          fileNameUploaded: [\r\n            {\r\n              required: true,\r\n              message: 'Tên huyện là bắt buộc',\r\n              trigger: 'change',\r\n            }\r\n          ],\r\n        },\r\n        columns: [\r\n          {\r\n            title: 'Mã danh mục',\r\n            dataIndex: 'maDM',\r\n            width: 200\r\n          },\r\n          {\r\n            title: 'Tên danh mục',\r\n            dataIndex: 'tenDanhMuc',\r\n            width: 200\r\n          },\r\n          {\r\n            title: 'Ghi chú',\r\n            dataIndex: 'ghiChu',\r\n            width: 200\r\n          },\r\n        ],\r\n        columnsError: [\r\n        {\r\n            title: 'Mã danh mục',\r\n            dataIndex: 'maDM',\r\n            width: 200\r\n          },\r\n          {\r\n            title: 'Tên danh mục',\r\n            dataIndex: 'tenDanhMuc',\r\n            width: 200\r\n          },\r\n          {\r\n            title: 'Ghi chú',\r\n            dataIndex: 'ghiChu',\r\n            width: 200\r\n          },\r\n          {\r\n            title: 'Loại lỗi',\r\n            dataIndex: 'errorFields',\r\n            key: \"errorFields\",\r\n            width: 200\r\n          },\r\n        ],\r\n        dataImport: {\r\n          danhMucs: [],\r\n          importSuccessfully: 0,\r\n          errorData: [],\r\n          importFailed: 0,\r\n          fileNameUploaded: null\r\n        },\r\n        steps: [\r\n          {\r\n            title: 'Nhập dữ liệu excel',\r\n            content: 'First-content',\r\n          },\r\n          {\r\n            title: 'Kiểm tra dữ liệu',\r\n            content: 'Second-content',\r\n          },\r\n        ],\r\n        selectedRowIds: [],\r\n        selectedRows: [],\r\n        lstMaDanhMuc: []\r\n      }\r\n    },\r\n    async mounted() {\r\n      this.getAllDataDanhMuc()\r\n    },\r\n    computed: {\r\n      items() {\r\n        return this.steps.map(item => ({\r\n          key: item.title,\r\n          title: item.title,\r\n        }));\r\n      },\r\n      rowSelection() {\r\n        return {\r\n          selectedRowKeys: this.selectedRowIds,\r\n          onChange: this.onChangeRow,\r\n          onSelect: this.onSelect,\r\n          onSelectAll: this.onSelectAll,\r\n          columnWidth: 50\r\n        }\r\n      },\r\n    },\r\n    methods: {\r\n      onChange(current) {\r\n        this.current = current\r\n      },\r\n      downloadTemplate() {\r\n        window.open(this.$configs.VUE_APP_APP_URL + '/EmployeeSalary_Template.xlsx')\r\n        if (this.current === 0 || this.current === undefined) {\r\n          this.current = 1\r\n        }\r\n      },\r\n      onChangeRow(selectedRowIds) {\r\n        this.selectedRowIds = selectedRowIds\r\n      },\r\n      onSelect(record, selected, selectedRows) {\r\n        this.selectedRows = selectedRows\r\n      },\r\n      onSelectAll(selected, selectedRows) {\r\n        this.selectedRows = selectedRows\r\n      },\r\n      next() {\r\n        if (!this.dataImport.fileNameUploaded) {\r\n          this.$message.error('File không tồn tại')\r\n          return\r\n        }\r\n        this.current++;\r\n        this.importExcel()\r\n      },\r\n      upload() {\r\n        const FILE_IMPORT = document.querySelector('#inpFile')\r\n        this.dataImport.fileNameUploaded = FILE_IMPORT.files[0].name\r\n      },\r\n      prev() {\r\n        this.current--\r\n        this.dataImport = {\r\n          employees: [],\r\n          importSuccessfully: 0,\r\n          importFailed: 0,\r\n          fileNameUploaded: null,\r\n          errorData: []\r\n        }\r\n      },\r\n      closeImport(){\r\n        this.$router.push({ name: 'QL_DanhMuc' })\r\n      },\r\n      \r\n      async importExcel() {\r\n        const FILE_IMPORT = document.querySelector('#inpFile')\r\n        if (/(.*?)\\.(xlsx|xls)$/.test(FILE_IMPORT.files[0].name)) {\r\n          this.dataImport.fileNameUploaded = FILE_IMPORT.files[0].name\r\n          try {\r\n            const START_ROW = 2\r\n            this.dataImport.danhMucs = []\r\n            this.dataImport.importSuccessfully = 0\r\n            this.dataImport.importFailed = 0\r\n            const READER = new FileReader()\r\n            READER.onload = async (e) => {\r\n              try {\r\n                this.loading = true\r\n                const DATA = new Uint8Array(e.target.result)\r\n                const WORK_BOOK = new ExcelJS.Workbook()\r\n                await WORK_BOOK.xlsx.load(DATA)\r\n                var sheetEmployee = WORK_BOOK.worksheets[0]\r\n                for (let i = START_ROW, j = 1; i <= sheetEmployee.rowCount; i++, j++) {\r\n                  const ROW = sheetEmployee.getRow(i)\r\n                  if (!ROW.hasValues) continue\r\n                  const DANH_MUC = {\r\n                    maDM: ROW.getCell(1).text,\r\n                    tenDanhMuc: ROW.getCell(2).text,\r\n                   \r\n                    errorFields: []\r\n                  }\r\n                  // ckeck mã danh mục\r\n                  if (!DANH_MUC.maDM) {\r\n                    DANH_MUC.errorFields.push('Mã danh mục là bắt buộc')\r\n                  } else {\r\n                    if (this.lstMaDanhMuc.includes(DANH_MUC.maDM)) {\r\n                      DANH_MUC.errorFields.push('Trùng mã danh mục')\r\n                    }\r\n                  }\r\n                  // check tên danh mục\r\n                  if (!DANH_MUC.tenDanhMuc) {\r\n                    DANH_MUC.errorFields.push('Tên danh mục là bắt buộc')\r\n                  } \r\n  \r\n                  // sau khi check\r\n                  if (DANH_MUC.errorFields.length > 0) {\r\n                    this.dataImport.importFailed++\r\n                    this.dataImport.errorData.push(DANH_MUC)\r\n                  } else {\r\n                    this.dataImport.importSuccessfully++\r\n                    this.dataImport.danhMucs.push(DANH_MUC)\r\n                  }\r\n                }\r\n              } catch (error) {\r\n                this.$message.error(error)\r\n              } finally {\r\n                FILE_IMPORT.value = null\r\n                this.dataImport.danhMucs.sort((a, b) => b.errorFields.length - a.errorFields.length)\r\n                this.onChange(1)\r\n                this.loading = false\r\n              }\r\n            }\r\n            READER.readAsArrayBuffer(FILE_IMPORT.files[0])\r\n          } catch (error) {\r\n            this.$message.error('Lỗi file')\r\n          }\r\n        } else {\r\n          this.$message.error('Lỗi định dạng')\r\n        }\r\n      },\r\n      isValidDate(d) {\r\n        return d instanceof Date && !isNaN(d)\r\n      },\r\n      async save() {\r\n        if (this.selectedRows.length <= 0) {\r\n          this.$message.error('Chọn dòng cần import')\r\n        } else {\r\n          await APIService.post(\"/DanhMuc/import\", this.selectedRows)\r\n          this.$message.success('Import danh mục thành công')\r\n          this.dataImport.danhMucs = this.dataImport.danhMucs.filter(danhMuc => !this.selectedRows.includes(danhMuc))\r\n          this.selectedRows = []\r\n          this.selectedRowIds = []\r\n        }\r\n  \r\n      },\r\n      async submit() {\r\n      },\r\n      async getAllDataDanhMuc() {\r\n        var searchParam = {\r\n          pageIndex: 1,\r\n          pageSize: -1\r\n        }\r\n        var urlQuery = new URLSearchParams(searchParam).toString();\r\n        var result = (await APIService.get(\r\n          `/DanhMuc/GetDataByPage?` + urlQuery\r\n        )).data\r\n        this.lstMaDanhMuc = result.data.items.map((x) => { return x.maDM })\r\n      },\r\n      hide() {\r\n        this.dataImport = {\r\n          danhMucs: [],\r\n          importSuccessfully: 0,\r\n          importFailed: 0,\r\n          fileNameUploaded: null\r\n        }\r\n      },\r\n      exportExcel () {\r\n        const data = this.dataImport.errorData\r\n        const workbook = new ExcelJS.Workbook()\r\n        const sheet = workbook.addWorksheet('Sheet1')\r\n        sheet.columns = [\r\n          { key: 'maDM', header: 'Mã danh mục', width: 25 },\r\n          { key: 'tenDanhMuc', header: 'Tên danh mục', width: 50 },\r\n          { key: 'ghiChu', header: 'ghi chú', width: 50 },\r\n          { key: 'errorFields', header: 'Loại lỗi', width: 50 },\r\n  \r\n        ]\r\n        sheet.addRows(data)\r\n        sheet.eachRow({ includeEmpty: true }, function (row) {\r\n          row.border = {\r\n            top: { style: 'thin' },\r\n            left: { style: 'thin' },\r\n            bottom: { style: 'thin' },\r\n            right: { style: 'thin' }\r\n          }\r\n        })\r\n        workbook.xlsx\r\n          .writeBuffer({\r\n            base64: true\r\n          })\r\n          .then(function (xls64) {\r\n            // build anchor tag and attach file (works in chrome)\r\n            var a = document.createElement('a')\r\n            var data = new Blob([xls64], {\r\n              type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\r\n            })\r\n            var url = URL.createObjectURL(data)\r\n            a.href = url\r\n            a.download = 'DanhMuc_ErrorData.xlsx'\r\n            document.body.appendChild(a)\r\n            a.click()\r\n            setTimeout(function () {\r\n              document.body.removeChild(a)\r\n              window.URL.revokeObjectURL(url)\r\n            }, 0)\r\n          })\r\n          .catch(function (error) {\r\n            this.$message.error(error.message)\r\n          })\r\n      },\r\n    }\r\n  }\r\n  </script>\r\n  \r\n  <style scoped>\r\n  ::v-deep .table-striped {\r\n    background-color: rgb(241, 143, 159) !important;\r\n  }\r\n  \r\n  .steps-content {\r\n    margin-top: 16px;\r\n    border-radius: 6px;\r\n    min-height: 200px;\r\n  }\r\n  \r\n  .steps-action {\r\n    margin-top: 24px;\r\n  }\r\n  \r\n  ::v-deep .ant-form-item-label {\r\n    display: flex !important;\r\n    margin-left: 10px;\r\n  }\r\n  \r\n  ::v-deep .ant-table-footer {\r\n    display: flex !important;\r\n    justify-content: center !important;\r\n  }\r\n  </style>\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}