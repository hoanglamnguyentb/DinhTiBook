{"ast":null,"code":"import { defineStore } from 'pinia';\nimport { useLocalStorage } from '@vueuse/core';\nexport const useAuthStore = defineStore('auth', {\n  state: () => {\n    return {\n      user: useLocalStorage(\"user\", \"\"),\n      accessToken: useLocalStorage(\"accessToken\", \"\")\n    };\n  },\n  getters: {\n    getUser: state => state.user,\n    getAccessToken: state => state.accessToken\n  },\n  actions: {\n    changeUser(user) {\n      this.user = user;\n    },\n    changeAccessToken(accessToken) {\n      this.accessToken = accessToken;\n    }\n  }\n});","map":{"version":3,"names":["defineStore","useLocalStorage","useAuthStore","state","user","accessToken","getters","getUser","getAccessToken","actions","changeUser","changeAccessToken"],"sources":["D:/DA/DoAnFrontEnd/DoAnClient/client/src/stores/auth.js"],"sourcesContent":["import { defineStore } from 'pinia';\r\nimport { useLocalStorage } from '@vueuse/core'\r\n\r\nexport const useAuthStore = defineStore('auth', {\r\n    state: () => {\r\n        return {\r\n            user: useLocalStorage(\"user\", \"\"),\r\n            accessToken : useLocalStorage(\"accessToken\", \"\"),\r\n        }\r\n    },\r\n    getters: {\r\n        getUser: state => state.user,\r\n        getAccessToken: state => state.accessToken\r\n    },\r\n    \r\n    actions: {\r\n        changeUser(user) {\r\n            this.user = user\r\n        },\r\n        changeAccessToken(accessToken) {\r\n            this.accessToken = accessToken\r\n        },\r\n    }\r\n})"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,eAAe,QAAQ,cAAc;AAE9C,OAAO,MAAMC,YAAY,GAAGF,WAAW,CAAC,MAAM,EAAE;EAC5CG,KAAK,EAAEA,CAAA,KAAM;IACT,OAAO;MACHC,IAAI,EAAEH,eAAe,CAAC,MAAM,EAAE,EAAE,CAAC;MACjCI,WAAW,EAAGJ,eAAe,CAAC,aAAa,EAAE,EAAE;IACnD,CAAC;EACL,CAAC;EACDK,OAAO,EAAE;IACLC,OAAO,EAAEJ,KAAK,IAAIA,KAAK,CAACC,IAAI;IAC5BI,cAAc,EAAEL,KAAK,IAAIA,KAAK,CAACE;EACnC,CAAC;EAEDI,OAAO,EAAE;IACLC,UAAUA,CAACN,IAAI,EAAE;MACb,IAAI,CAACA,IAAI,GAAGA,IAAI;IACpB,CAAC;IACDO,iBAAiBA,CAACN,WAAW,EAAE;MAC3B,IAAI,CAACA,WAAW,GAAGA,WAAW;IAClC;EACJ;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}