{"ast":null,"code":"import { ref } from 'vue';\nexport default {\n  __name: 'FileManager',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    function getBase64(img, callback) {\n      const reader = new FileReader();\n      reader.addEventListener('load', () => callback(reader.result));\n      reader.readAsDataURL(img);\n    }\n    const fileList = ref([]);\n    const loading = ref(false);\n    const imageUrl = ref('');\n    const handleChange = info => {\n      console.log('áda', info.file.status);\n      if (info.file.status === 'uploading') {\n        loading.value = true;\n        return;\n      }\n      if (info.file.status === 'done') {\n        // Get this url from response in real world.\n        getBase64(info.file.originFileObj, base64Url => {\n          imageUrl.value = base64Url;\n          loading.value = false;\n        });\n      }\n      if (info.file.status === 'error') {\n        loading.value = false;\n        message.error('upload error');\n      }\n    };\n    const beforeUpload = file => {\n      const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n      if (!isJpgOrPng) {\n        message.error('You can only upload JPG file!');\n      }\n      const isLt2M = file.size / 1024 / 1024 < 2;\n      if (!isLt2M) {\n        message.error('Image must smaller than 2MB!');\n      }\n      return isJpgOrPng && isLt2M;\n    };\n    const __returned__ = {\n      getBase64,\n      fileList,\n      loading,\n      imageUrl,\n      handleChange,\n      beforeUpload,\n      ref\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","fileList","loading","imageUrl","handleChange","info","console","log","file","status","value","originFileObj","base64Url","message","error","beforeUpload","isJpgOrPng","type","isLt2M","size"],"sources":["D:/DA/DoAnClient/client/src/components/FileManager/FileManager.vue"],"sourcesContent":["<!-- <template>\r\n  <a-upload\r\n    v-model:file-list=\"fileList\"\r\n    name=\"avatar\"\r\n    list-type=\"picture-card\"\r\n    class=\"avatar-uploader\"\r\n    :show-upload-list=\"false\"\r\n    action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n    :before-upload=\"beforeUpload\"\r\n    @change=\"handleChange\"\r\n  >\r\n    <img v-if=\"imageUrl\" :src=\"imageUrl\" alt=\"avatar\" />\r\n    <div v-else>\r\n      <loading-outlined v-if=\"loading\"></loading-outlined>\r\n      <plus-outlined v-else></plus-outlined>\r\n      <div class=\"ant-upload-text\">Upload</div>\r\n    </div>\r\n  </a-upload>\r\n</template>\r\n\r\n<script>\r\n// function getBase64(img, callback) {\r\n//   const reader = new FileReader();\r\n//   reader.addEventListener('load', () => callback(reader.result));\r\n//   reader.readAsDataURL(img);\r\n// }\r\nexport default {\r\n  data(){\r\n    return{\r\n      fileList : [],\r\n      loading :false,\r\n      imageUrl : '',\r\n    }\r\n  },\r\n  methods:{\r\n    handleChange(info){\r\n      if (info.file.status === 'uploading') {\r\n        this.loading = true;\r\n        return;\r\n      }\r\n      if (info.file.status === 'done') {\r\n        // Get this url from response in real world.\r\n        this.getBase64(info.file.originFileObj, base64Url => {\r\n          this.imageUrl = base64Url;\r\n          this.loading = false;\r\n        });\r\n      }\r\n      if (info.file.status === 'error') {\r\n        this.loading = false;\r\n        this.$message.error('upload error');\r\n      }\r\n    } ,\r\n    \r\n    beforeUpload(file){\r\n      const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n      if (!isJpgOrPng) {\r\n        message.error('You can only upload JPG file!');\r\n      }\r\n      const isLt2M = file.size / 1024 / 1024 < 2;\r\n      if (!isLt2M) {\r\n        message.error('Image must smaller than 2MB!');\r\n      }\r\n      return isJpgOrPng && isLt2M;\r\n    },\r\n\r\n    getBase64(img, callback) {\r\n      const reader = new FileReader();\r\n      reader.addEventListener('load', () => callback(reader.result));\r\n      reader.readAsDataURL(img);\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style> -->\r\n\r\n<template>\r\n  <a-upload\r\n    v-model:file-list=\"fileList\"\r\n    name=\"avatar\"\r\n    list-type=\"picture-card\"\r\n    class=\"avatar-uploader\"\r\n    :show-upload-list=\"false\"\r\n    action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n    :before-upload=\"beforeUpload\"\r\n    @change=\"handleChange\"\r\n  >\r\n    <img v-if=\"imageUrl\" :src=\"imageUrl\" alt=\"avatar\" />\r\n    <div v-else>\r\n      <loading-outlined v-if=\"loading\"></loading-outlined>\r\n      <plus-outlined v-else></plus-outlined>\r\n      <div class=\"ant-upload-text\">Upload</div>\r\n    </div>\r\n  </a-upload>\r\n</template>\r\n<script setup>\r\nimport { ref } from 'vue';\r\n\r\nfunction getBase64(img, callback) {\r\n  const reader = new FileReader();\r\n  reader.addEventListener('load', () => callback(reader.result));\r\n  reader.readAsDataURL(img);\r\n}\r\nconst fileList = ref([]);\r\nconst loading = ref(false);\r\nconst imageUrl = ref('');\r\nconst handleChange = info => {\r\n  console.log('áda', info.file.status)\r\n  if (info.file.status === 'uploading') {\r\n    loading.value = true;\r\n    return;\r\n  }\r\n  if (info.file.status === 'done') {\r\n    // Get this url from response in real world.\r\n    getBase64(info.file.originFileObj, base64Url => {\r\n      imageUrl.value = base64Url;\r\n      loading.value = false;\r\n    });\r\n  }\r\n  if (info.file.status === 'error') {\r\n    loading.value = false;\r\n    message.error('upload error');\r\n  }\r\n};\r\nconst beforeUpload = file => {\r\n  const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n  if (!isJpgOrPng) {\r\n    message.error('You can only upload JPG file!');\r\n  }\r\n  const isLt2M = file.size / 1024 / 1024 < 2;\r\n  if (!isLt2M) {\r\n    message.error('Image must smaller than 2MB!');\r\n  }\r\n  return isJpgOrPng && isLt2M;\r\n};\r\n</script>\r\n<style scoped>\r\n.avatar-uploader > .ant-upload {\r\n  width: 128px;\r\n  height: 128px;\r\n}\r\n.ant-upload-select-picture-card i {\r\n  font-size: 32px;\r\n  color: #999;\r\n}\r\n\r\n.ant-upload-select-picture-card .ant-upload-text {\r\n  margin-top: 8px;\r\n  color: #666;\r\n}\r\n</style>"],"mappings":"AAkGA,SAASA,GAAG,QAAQ,KAAK;;;;;;;IAEzB,SAASC,SAASA,CAACC,GAAG,EAAEC,QAAQ,EAAE;MAChC,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,gBAAgB,CAAC,MAAM,EAAE,MAAMH,QAAQ,CAACC,MAAM,CAACG,MAAM,CAAC,CAAC;MAC9DH,MAAM,CAACI,aAAa,CAACN,GAAG,CAAC;IAC3B;IACA,MAAMO,QAAQ,GAAGT,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMU,OAAO,GAAGV,GAAG,CAAC,KAAK,CAAC;IAC1B,MAAMW,QAAQ,GAAGX,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMY,YAAY,GAAGC,IAAI,IAAI;MAC3BC,OAAO,CAACC,GAAG,CAAC,KAAK,EAAEF,IAAI,CAACG,IAAI,CAACC,MAAM,CAAC;MACpC,IAAIJ,IAAI,CAACG,IAAI,CAACC,MAAM,KAAK,WAAW,EAAE;QACpCP,OAAO,CAACQ,KAAK,GAAG,IAAI;QACpB;MACF;MACA,IAAIL,IAAI,CAACG,IAAI,CAACC,MAAM,KAAK,MAAM,EAAE;QAC/B;QACAhB,SAAS,CAACY,IAAI,CAACG,IAAI,CAACG,aAAa,EAAEC,SAAS,IAAI;UAC9CT,QAAQ,CAACO,KAAK,GAAGE,SAAS;UAC1BV,OAAO,CAACQ,KAAK,GAAG,KAAK;QACvB,CAAC,CAAC;MACJ;MACA,IAAIL,IAAI,CAACG,IAAI,CAACC,MAAM,KAAK,OAAO,EAAE;QAChCP,OAAO,CAACQ,KAAK,GAAG,KAAK;QACrBG,OAAO,CAACC,KAAK,CAAC,cAAc,CAAC;MAC/B;IACF,CAAC;IACD,MAAMC,YAAY,GAAGP,IAAI,IAAI;MAC3B,MAAMQ,UAAU,GAAGR,IAAI,CAACS,IAAI,KAAK,YAAY,IAAIT,IAAI,CAACS,IAAI,KAAK,WAAW;MAC1E,IAAI,CAACD,UAAU,EAAE;QACfH,OAAO,CAACC,KAAK,CAAC,+BAA+B,CAAC;MAChD;MACA,MAAMI,MAAM,GAAGV,IAAI,CAACW,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,CAAC;MAC1C,IAAI,CAACD,MAAM,EAAE;QACXL,OAAO,CAACC,KAAK,CAAC,8BAA8B,CAAC;MAC/C;MACA,OAAOE,UAAU,IAAIE,MAAM;IAC7B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}