{"ast":null,"code":"import { createWebHistory, createRouter } from \"vue-router\";\nimport routes from './routes';\nimport appConfig from \"../../app.config\";\nimport APIService from \"../helpers/ApiService\";\n\n/* eslint-disable */\n\nconst router = createRouter({\n  history: createWebHistory(import.meta.BASE_URL),\n  routes,\n  // Use the HTML5 history API (i.e. normal-looking routes)\n  // instead of routes with hashes (e.g. example.com/#/about).\n  // This may require some server configuration in production:\n  // https://router.vuejs.org/en/essentials/history-mode.html#example-server-configurations\n  mode: 'history',\n  // Simulate native-like scroll behavior when navigating to a new\n  // route and using back/forward buttons.\n  scrollBehavior(to, from, savedPosition) {\n    if (savedPosition) {\n      return savedPosition;\n    } else {\n      return {\n        top: 0,\n        left: 0\n      };\n    }\n  }\n});\n\n// API based Authentication\n// Before each route evaluates...\nrouter.beforeEach(async (routeTo, routeFrom, next) => {\n  const authRequired = routeTo.matched.some(route => route.meta.authRequired);\n  if (!authRequired) return next();\n  try {\n    var data = await APIService.get(\"user/validate-token\");\n    if (data.status == 200) {\n      return next();\n    } else localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"accessToken\");\n    next({\n      name: 'login',\n      query: {\n        redirectFrom: routeTo.fullPath\n      }\n    });\n  } catch (error) {\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"accessToken\");\n    next({\n      name: 'login',\n      query: {\n        redirectFrom: routeTo.fullPath\n      }\n    });\n  }\n});\nrouter.beforeEach((routeTo, routeFrom, next) => {\n  const publicPages = ['/login', '/register', '/forgot-password'];\n  const authpage = !publicPages.includes(routeTo.path);\n  const loggeduser = localStorage.getItem('user');\n  const accessToken = localStorage.getItem('accessToken');\n  if (authpage && !loggeduser && !accessToken) {\n    return next('/login');\n  }\n  next();\n});\nrouter.beforeResolve(async (routeTo, routeFrom, next) => {\n  try {\n    for (const route of routeTo.matched) {\n      await new Promise((resolve, reject) => {\n        if (route.meta && route.meta.beforeResolve) {\n          route.meta.beforeResolve(routeTo, routeFrom, (...args) => {\n            if (args.length) {\n              next(...args);\n              reject(new Error('Redirected'));\n            } else {\n              resolve();\n            }\n          });\n        } else {\n          resolve();\n        }\n      });\n    }\n  } catch (error) {\n    return;\n  }\n  document.title = routeTo.meta.title + ' | ' + appConfig.title;\n  next();\n});\nexport default router;","map":{"version":3,"names":["createWebHistory","createRouter","routes","appConfig","APIService","router","history","import","meta","BASE_URL","mode","scrollBehavior","to","from","savedPosition","top","left","beforeEach","routeTo","routeFrom","next","authRequired","matched","some","route","data","get","status","localStorage","removeItem","name","query","redirectFrom","fullPath","error","publicPages","authpage","includes","path","loggeduser","getItem","accessToken","beforeResolve","Promise","resolve","reject","args","length","Error","document","title"],"sources":["D:/DA/DoAnClient/client/src/router/index.js"],"sourcesContent":["import { createWebHistory, createRouter } from \"vue-router\";\r\nimport routes from './routes';\r\nimport appConfig from \"../../app.config\";\r\nimport APIService from \"../helpers/ApiService\";\r\n\r\n\r\n/* eslint-disable */\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(import.meta.BASE_URL),\r\n  routes,\r\n  // Use the HTML5 history API (i.e. normal-looking routes)\r\n  // instead of routes with hashes (e.g. example.com/#/about).\r\n  // This may require some server configuration in production:\r\n  // https://router.vuejs.org/en/essentials/history-mode.html#example-server-configurations\r\n  mode: 'history',\r\n  // Simulate native-like scroll behavior when navigating to a new\r\n  // route and using back/forward buttons.\r\n  scrollBehavior(to, from, savedPosition) {\r\n    if (savedPosition) {\r\n      return savedPosition;\r\n    } else {\r\n      return { top: 0, left: 0 };\r\n    }\r\n  },\r\n});\r\n\r\n// API based Authentication\r\n// Before each route evaluates...\r\nrouter.beforeEach(async (routeTo, routeFrom, next) => {\r\n  const authRequired = routeTo.matched.some((route) => route.meta.authRequired);\r\n  if (!authRequired) return next();\r\n  try {\r\n    var data = await APIService.get(\"user/validate-token\");\r\n    if(data.status == 200){\r\n      return next();\r\n    }else\r\n      localStorage.removeItem(\"user\")\r\n      localStorage.removeItem(\"accessToken\")\r\n      next({ name: 'login', query: { redirectFrom: routeTo.fullPath } });\r\n    \r\n  } catch (error) {\r\n    localStorage.removeItem(\"user\")\r\n    localStorage.removeItem(\"accessToken\")\r\n    next({ name: 'login', query: { redirectFrom: routeTo.fullPath } });\r\n  }\r\n});\r\n\r\nrouter.beforeEach((routeTo, routeFrom, next) => {\r\n    const publicPages = ['/login', '/register', '/forgot-password'];\r\n    const authpage = !publicPages.includes(routeTo.path);\r\n    const loggeduser = localStorage.getItem('user');\r\n    const accessToken = localStorage.getItem('accessToken');\r\n    if (authpage && !loggeduser && !accessToken) {\r\n      return next('/login');\r\n    }\r\n    next();\r\n  \r\n});\r\n\r\nrouter.beforeResolve(async (routeTo, routeFrom, next) => {\r\n  try {\r\n    for (const route of routeTo.matched) {\r\n      await new Promise((resolve, reject) => {\r\n        if (route.meta && route.meta.beforeResolve) {\r\n          route.meta.beforeResolve(routeTo, routeFrom, (...args) => {\r\n            if (args.length) {\r\n              next(...args);\r\n              reject(new Error('Redirected'));\r\n            } else {\r\n              resolve();\r\n            }\r\n          });\r\n        } else {\r\n          resolve();\r\n        }\r\n      });\r\n    }\r\n  } catch (error) {\r\n    return;\r\n  }\r\n  document.title = routeTo.meta.title + ' | ' + appConfig.title;\r\n  next();\r\n});\r\n\r\nexport default router;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}