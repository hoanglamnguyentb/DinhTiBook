{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createBlock as _createBlock, createElementVNode as _createElementVNode, withCtx as _withCtx, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-2bae8073\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = [\"src\"];\nconst _hoisted_2 = {\n  key: 1\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"ant-upload-text\"\n}, \"Upload\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_loading_outlined = _resolveComponent(\"loading-outlined\");\n  const _component_plus_outlined = _resolveComponent(\"plus-outlined\");\n  const _component_a_upload = _resolveComponent(\"a-upload\");\n  return _openBlock(), _createBlock(_component_a_upload, {\n    \"file-list\": $setup.fileList,\n    \"onUpdate:fileList\": _cache[0] || (_cache[0] = $event => $setup.fileList = $event),\n    name: \"avatar\",\n    \"list-type\": \"picture-card\",\n    class: \"avatar-uploader\",\n    \"show-upload-list\": false,\n    action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\n    \"before-upload\": $setup.beforeUpload,\n    onChange: $setup.handleChange\n  }, {\n    default: _withCtx(() => [$setup.imageUrl ? (_openBlock(), _createElementBlock(\"img\", {\n      key: 0,\n      src: $setup.imageUrl,\n      alt: \"avatar\"\n    }, null, 8 /* PROPS */, _hoisted_1)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [$setup.loading ? (_openBlock(), _createBlock(_component_loading_outlined, {\n      key: 0\n    })) : (_openBlock(), _createBlock(_component_plus_outlined, {\n      key: 1\n    })), _hoisted_3]))]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"file-list\"]);\n}","map":{"version":3,"names":["_createElementVNode","class","_createBlock","_component_a_upload","$setup","fileList","$event","name","action","beforeUpload","onChange","handleChange","imageUrl","_createElementBlock","src","alt","_hoisted_2","loading","_component_loading_outlined","key","_component_plus_outlined","_hoisted_3"],"sources":["D:\\DA\\DoAnClient\\client\\src\\components\\FileManager\\FileManager.vue"],"sourcesContent":["<!-- <template>\r\n  <a-upload\r\n    v-model:file-list=\"fileList\"\r\n    name=\"avatar\"\r\n    list-type=\"picture-card\"\r\n    class=\"avatar-uploader\"\r\n    :show-upload-list=\"false\"\r\n    action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n    :before-upload=\"beforeUpload\"\r\n    @change=\"handleChange\"\r\n  >\r\n    <img v-if=\"imageUrl\" :src=\"imageUrl\" alt=\"avatar\" />\r\n    <div v-else>\r\n      <loading-outlined v-if=\"loading\"></loading-outlined>\r\n      <plus-outlined v-else></plus-outlined>\r\n      <div class=\"ant-upload-text\">Upload</div>\r\n    </div>\r\n  </a-upload>\r\n</template>\r\n\r\n<script>\r\n// function getBase64(img, callback) {\r\n//   const reader = new FileReader();\r\n//   reader.addEventListener('load', () => callback(reader.result));\r\n//   reader.readAsDataURL(img);\r\n// }\r\nexport default {\r\n  data(){\r\n    return{\r\n      fileList : [],\r\n      loading :false,\r\n      imageUrl : '',\r\n    }\r\n  },\r\n  methods:{\r\n    handleChange(info){\r\n      if (info.file.status === 'uploading') {\r\n        this.loading = true;\r\n        return;\r\n      }\r\n      if (info.file.status === 'done') {\r\n        // Get this url from response in real world.\r\n        this.getBase64(info.file.originFileObj, base64Url => {\r\n          this.imageUrl = base64Url;\r\n          this.loading = false;\r\n        });\r\n      }\r\n      if (info.file.status === 'error') {\r\n        this.loading = false;\r\n        this.$message.error('upload error');\r\n      }\r\n    } ,\r\n    \r\n    beforeUpload(file){\r\n      const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n      if (!isJpgOrPng) {\r\n        message.error('You can only upload JPG file!');\r\n      }\r\n      const isLt2M = file.size / 1024 / 1024 < 2;\r\n      if (!isLt2M) {\r\n        message.error('Image must smaller than 2MB!');\r\n      }\r\n      return isJpgOrPng && isLt2M;\r\n    },\r\n\r\n    getBase64(img, callback) {\r\n      const reader = new FileReader();\r\n      reader.addEventListener('load', () => callback(reader.result));\r\n      reader.readAsDataURL(img);\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style> -->\r\n\r\n<template>\r\n  <a-upload\r\n    v-model:file-list=\"fileList\"\r\n    name=\"avatar\"\r\n    list-type=\"picture-card\"\r\n    class=\"avatar-uploader\"\r\n    :show-upload-list=\"false\"\r\n    action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n    :before-upload=\"beforeUpload\"\r\n    @change=\"handleChange\"\r\n  >\r\n    <img v-if=\"imageUrl\" :src=\"imageUrl\" alt=\"avatar\" />\r\n    <div v-else>\r\n      <loading-outlined v-if=\"loading\"></loading-outlined>\r\n      <plus-outlined v-else></plus-outlined>\r\n      <div class=\"ant-upload-text\">Upload</div>\r\n    </div>\r\n  </a-upload>\r\n</template>\r\n<script setup>\r\nimport { ref } from 'vue';\r\n\r\nfunction getBase64(img, callback) {\r\n  const reader = new FileReader();\r\n  reader.addEventListener('load', () => callback(reader.result));\r\n  reader.readAsDataURL(img);\r\n}\r\nconst fileList = ref([]);\r\nconst loading = ref(false);\r\nconst imageUrl = ref('');\r\nconst handleChange = info => {\r\n  console.log('Ã¡da', info.file.status)\r\n  if (info.file.status === 'uploading') {\r\n    loading.value = true;\r\n    return;\r\n  }\r\n  if (info.file.status === 'done') {\r\n    // Get this url from response in real world.\r\n    getBase64(info.file.originFileObj, base64Url => {\r\n      imageUrl.value = base64Url;\r\n      loading.value = false;\r\n    });\r\n  }\r\n  if (info.file.status === 'error') {\r\n    loading.value = false;\r\n    message.error('upload error');\r\n  }\r\n};\r\nconst beforeUpload = file => {\r\n  const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n  if (!isJpgOrPng) {\r\n    message.error('You can only upload JPG file!');\r\n  }\r\n  const isLt2M = file.size / 1024 / 1024 < 2;\r\n  if (!isLt2M) {\r\n    message.error('Image must smaller than 2MB!');\r\n  }\r\n  return isJpgOrPng && isLt2M;\r\n};\r\n</script>\r\n<style scoped>\r\n.avatar-uploader > .ant-upload {\r\n  width: 128px;\r\n  height: 128px;\r\n}\r\n.ant-upload-select-picture-card i {\r\n  font-size: 32px;\r\n  color: #999;\r\n}\r\n\r\n.ant-upload-select-picture-card .ant-upload-text {\r\n  margin-top: 8px;\r\n  color: #666;\r\n}\r\n</style>"],"mappings":";;;;;;gEA6FMA,mBAAA,CAAyC;EAApCC,KAAK,EAAC;AAAiB,GAAC,QAAM;;;;;uBAdvCC,YAAA,CAgBWC,mBAAA;IAfD,WAAS,EAAEC,MAAA,CAAAC,QAAQ;6DAARD,MAAA,CAAAC,QAAQ,GAAAC,MAAA;IAC3BC,IAAI,EAAC,QAAQ;IACb,WAAS,EAAC,cAAc;IACxBN,KAAK,EAAC,iBAAiB;IACtB,kBAAgB,EAAE,KAAK;IACxBO,MAAM,EAAC,kDAAkD;IACxD,eAAa,EAAEJ,MAAA,CAAAK,YAAY;IAC3BC,QAAM,EAAEN,MAAA,CAAAO;;sBAET,MAAoD,CAAzCP,MAAA,CAAAQ,QAAQ,I,cAAnBC,mBAAA,CAAoD;;MAA9BC,GAAG,EAAEV,MAAA,CAAAQ,QAAQ;MAAEG,GAAG,EAAC;0DACzCF,mBAAA,CAIM,OAAAG,UAAA,GAHoBZ,MAAA,CAAAa,OAAO,I,cAA/Bf,YAAA,CAAoDgB,2BAAA;MAAAC,GAAA;IAAA,O,cACpDjB,YAAA,CAAsCkB,wBAAA;MAAAD,GAAA;IAAA,KACtCE,UAAyC,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}