{"ast":null,"code":"import APIService from \"@/helpers/ApiService\";\nexport default {\n  data() {\n    return {\n      previewVisible: false,\n      previewImage: '',\n      previewTitle: '',\n      fileList: [],\n      parentId: '1e03b110-a719-44b9-4dce-08dc58ae1b5b'\n    };\n  },\n  methods: {\n    getBase64(img, callback) {\n      const reader = new FileReader();\n      reader.addEventListener('load', () => callback(reader.result));\n      reader.readAsDataURL(img);\n    },\n    handleCancel() {\n      previewVisible.value = false;\n      previewTitle.value = '';\n    },\n    async handlePreview(file) {\n      if (!file.url && !file.preview) {\n        file.preview = await getBase64(file.originFileObj);\n      }\n      previewImage.value = file.url || file.preview;\n      previewVisible.value = true;\n      previewTitle.value = file.name || file.url.substring(file.url.lastIndexOf('/') + 1);\n    },\n    async UploadImage(file) {\n      const formData = new FormData();\n      formData.append('Files', file);\n      console.log('file', file);\n      try {\n        await APIService.post(\"/FileManager/Upload?ParentID=1e03b110-a719-44b9-4dce-08dc58ae1b5b\", formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n\n        // var resUpload = await APIService.post(\"/FileManager/Upload?ParentID=\"+ this.parentId, formData,\n        // {\n        //   headers: {\n        //       'Content-Type': 'multipart/form-data'\n        //   },\n        //   onUploadProgress: progressEvent => {\n        //     const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n        //   }\n        // });\n\n        this.$message.success(\"Thêm thành công\");\n      } catch (error) {\n        if (error.response && error.response.data && error.response.data.message) {\n          this.$message.error(error.response.data.message);\n        } else {\n          this.$message.error(\"Đã xảy ra lỗi khi tải lên tập tin.\");\n        }\n      }\n    }\n  }\n\n  // async handleUpload(file, onSuccess, onError ){\n  //   const formData = new FormData();\n  //     formData.append('Files', file);\n  //     try {\n  //       var resUpload = await APIService.post(\"/FileManager/Upload?ParentID=\", formData,\n  //       {\n  //         headers: {\n  //             'Content-Type': 'multipart/form-data'\n  //         },\n  //         onUploadProgress: progressEvent => {\n  //           const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n  //         }\n  //       });\n  //       if(resUpload.data != null){\n  //         file.status = \"done\"\n  //         file.response = resUpload.data.message\n  //         onSuccess(resUpload.data, file)\n  //       }else{\n  //         file.status = 'error'\n  //         file.response = resUpload.data.message\n  //         onError(resUpload.data)\n  //       }\n  //    }catch(error){\n  //       file.status = 'error'\n  //       file.response = error.data.message\n  //       onError(error)\n  //    }\n  // }\n};","map":{"version":3,"names":["APIService","data","previewVisible","previewImage","previewTitle","fileList","parentId","methods","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","handleCancel","value","handlePreview","file","url","preview","originFileObj","name","substring","lastIndexOf","UploadImage","formData","FormData","append","console","log","post","headers","$message","success","error","response","message"],"sources":["D:\\DA\\DoAnClient\\client\\src\\components\\FileManager\\FileManager.vue"],"sourcesContent":["<template>\r\n  <div class=\"clearfix\">\r\n    <a-upload\r\n      v-model:file-list=\"fileList\"\r\n      name=\"file\"\r\n      list-type=\"picture-card\"\r\n      @preview=\"handlePreview\"\r\n      :customRequest=\"handleUpload\"\r\n    >\r\n      <div v-if=\"fileList.length < 8\">\r\n        <plus-outlined />\r\n        <div style=\"margin-top: 8px\">Upload</div>\r\n      </div>\r\n    </a-upload>\r\n    <a-modal :open=\"previewVisible\" :title=\"previewTitle\" :footer=\"null\" @cancel=\"handleCancel\">\r\n      <img alt=\"example\" style=\"width: 100%\" :src=\"previewImage\" />\r\n    </a-modal>\r\n  </div>\r\n\r\n  <a-button @click=\"UploadImage\">Lưu</a-button>\r\n</template>\r\n\r\n\r\n<script>\r\n\r\nimport APIService from \"@/helpers/ApiService\";\r\nexport default {\r\n  data(){\r\n    return{\r\n      previewVisible  : false,\r\n      previewImage  :'',\r\n      previewTitle  : '',\r\n      fileList :[],\r\n      parentId :'1e03b110-a719-44b9-4dce-08dc58ae1b5b'\r\n    }\r\n  },\r\n  methods:{\r\n    getBase64(img, callback) {\r\n      const reader = new FileReader();\r\n      reader.addEventListener('load', () => callback(reader.result));\r\n      reader.readAsDataURL(img);\r\n    },\r\n    handleCancel(){\r\n      previewVisible.value = false;\r\n      previewTitle.value = '';\r\n    },\r\n    async handlePreview(file){\r\n      if (!file.url && !file.preview) {\r\n        file.preview = await getBase64(file.originFileObj);\r\n      }\r\n      previewImage.value = file.url || file.preview;\r\n      previewVisible.value = true;\r\n      previewTitle.value = file.name || file.url.substring(file.url.lastIndexOf('/') + 1);\r\n    },\r\n    async UploadImage(file){\r\n      const formData = new FormData();\r\n      formData.append('Files', file);\r\n      console.log('file', file)\r\n      try {\r\n        await APIService.post(\"/FileManager/Upload?ParentID=1e03b110-a719-44b9-4dce-08dc58ae1b5b\" , formData,{\r\n          headers: {\r\n              'Content-Type': 'multipart/form-data'\r\n          },\r\n        });\r\n\r\n        // var resUpload = await APIService.post(\"/FileManager/Upload?ParentID=\"+ this.parentId, formData,\r\n        // {\r\n        //   headers: {\r\n        //       'Content-Type': 'multipart/form-data'\r\n        //   },\r\n        //   onUploadProgress: progressEvent => {\r\n        //     const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n        //   }\r\n        // });\r\n\r\n        this.$message.success(\"Thêm thành công\");\r\n      } catch (error) {\r\n        if (error.response && error.response.data && error.response.data.message) {\r\n          this.$message.error(error.response.data.message);\r\n        } else {\r\n          this.$message.error(\"Đã xảy ra lỗi khi tải lên tập tin.\");\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  // async handleUpload(file, onSuccess, onError ){\r\n  //   const formData = new FormData();\r\n  //     formData.append('Files', file);\r\n  //     try {\r\n  //       var resUpload = await APIService.post(\"/FileManager/Upload?ParentID=\", formData,\r\n  //       {\r\n  //         headers: {\r\n  //             'Content-Type': 'multipart/form-data'\r\n  //         },\r\n  //         onUploadProgress: progressEvent => {\r\n  //           const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n  //         }\r\n  //       });\r\n  //       if(resUpload.data != null){\r\n  //         file.status = \"done\"\r\n  //         file.response = resUpload.data.message\r\n  //         onSuccess(resUpload.data, file)\r\n  //       }else{\r\n  //         file.status = 'error'\r\n  //         file.response = resUpload.data.message\r\n  //         onError(resUpload.data)\r\n  //       }\r\n  //    }catch(error){\r\n  //       file.status = 'error'\r\n  //       file.response = error.data.message\r\n  //       onError(error)\r\n  //    }\r\n  // }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* you can make up upload button and sample style by using stylesheets */\r\n.ant-upload-select-picture-card i {\r\n  font-size: 32px;\r\n  color: #999;\r\n}\r\n\r\n.ant-upload-select-picture-card .ant-upload-text {\r\n  margin-top: 8px;\r\n  color: #666;\r\n}\r\n</style>"],"mappings":"AAyBA,OAAOA,UAAS,MAAO,sBAAsB;AAC7C,eAAe;EACbC,IAAIA,CAAA,EAAE;IACJ,OAAM;MACJC,cAAa,EAAK,KAAK;MACvBC,YAAW,EAAI,EAAE;MACjBC,YAAW,EAAK,EAAE;MAClBC,QAAO,EAAG,EAAE;MACZC,QAAO,EAAG;IACZ;EACF,CAAC;EACDC,OAAO,EAAC;IACNC,SAASA,CAACC,GAAG,EAAEC,QAAQ,EAAE;MACvB,MAAMC,MAAK,GAAI,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,gBAAgB,CAAC,MAAM,EAAE,MAAMH,QAAQ,CAACC,MAAM,CAACG,MAAM,CAAC,CAAC;MAC9DH,MAAM,CAACI,aAAa,CAACN,GAAG,CAAC;IAC3B,CAAC;IACDO,YAAYA,CAAA,EAAE;MACZd,cAAc,CAACe,KAAI,GAAI,KAAK;MAC5Bb,YAAY,CAACa,KAAI,GAAI,EAAE;IACzB,CAAC;IACD,MAAMC,aAAaA,CAACC,IAAI,EAAC;MACvB,IAAI,CAACA,IAAI,CAACC,GAAE,IAAK,CAACD,IAAI,CAACE,OAAO,EAAE;QAC9BF,IAAI,CAACE,OAAM,GAAI,MAAMb,SAAS,CAACW,IAAI,CAACG,aAAa,CAAC;MACpD;MACAnB,YAAY,CAACc,KAAI,GAAIE,IAAI,CAACC,GAAE,IAAKD,IAAI,CAACE,OAAO;MAC7CnB,cAAc,CAACe,KAAI,GAAI,IAAI;MAC3Bb,YAAY,CAACa,KAAI,GAAIE,IAAI,CAACI,IAAG,IAAKJ,IAAI,CAACC,GAAG,CAACI,SAAS,CAACL,IAAI,CAACC,GAAG,CAACK,WAAW,CAAC,GAAG,IAAI,CAAC,CAAC;IACrF,CAAC;IACD,MAAMC,WAAWA,CAACP,IAAI,EAAC;MACrB,MAAMQ,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEV,IAAI,CAAC;MAC9BW,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEZ,IAAI;MACxB,IAAI;QACF,MAAMnB,UAAU,CAACgC,IAAI,CAAC,mEAAkE,EAAIL,QAAQ,EAAC;UACnGM,OAAO,EAAE;YACL,cAAc,EAAE;UACpB;QACF,CAAC,CAAC;;QAEF;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA,IAAI,CAACC,QAAQ,CAACC,OAAO,CAAC,iBAAiB,CAAC;MAC1C,EAAE,OAAOC,KAAK,EAAE;QACd,IAAIA,KAAK,CAACC,QAAO,IAAKD,KAAK,CAACC,QAAQ,CAACpC,IAAG,IAAKmC,KAAK,CAACC,QAAQ,CAACpC,IAAI,CAACqC,OAAO,EAAE;UACxE,IAAI,CAACJ,QAAQ,CAACE,KAAK,CAACA,KAAK,CAACC,QAAQ,CAACpC,IAAI,CAACqC,OAAO,CAAC;QAClD,OAAO;UACL,IAAI,CAACJ,QAAQ,CAACE,KAAK,CAAC,oCAAoC,CAAC;QAC3D;MACF;IACF;EACF;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}