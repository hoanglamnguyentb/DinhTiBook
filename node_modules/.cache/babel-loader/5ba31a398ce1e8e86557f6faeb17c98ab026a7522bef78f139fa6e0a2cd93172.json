{"ast":null,"code":"import Layout from \"../../../layouts/main.vue\";\nimport appConfig from \"../../../../app.config\";\nimport PageHeader from \"@/components/page-header\";\nimport animationData from \"@/components/Animation/uetqnvvg.json\";\nimport Lottie from \"@/components/widgets/lottie.vue\";\nimport APIService from \"@/helpers/ApiService\";\nimport { toast } from 'vue3-toastify';\nimport 'vue3-toastify/dist/index.css';\nimport Common from \"@/helpers/Common\";\nexport default {\n  page: {\n    title: \"Order Details\",\n    meta: [{\n      name: \"description\",\n      content: appConfig.description\n    }]\n  },\n  data() {\n    return {\n      title: \"Chi tiết bài viết\",\n      items: [{\n        text: \"Tin tức\",\n        href: \"/\"\n      }, {\n        text: \"Chi tiết bài viết\",\n        active: true\n      }],\n      defaultOptions: {\n        animationData: animationData\n      },\n      post: {}\n    };\n  },\n  created() {\n    this.GetById();\n  },\n  methods: {\n    formatDate: Common.formatDate,\n    async GetById() {\n      try {\n        var paramId = this.$route.params.id;\n        var dataPost = await APIService.get(\"TinTuc/\" + paramId);\n        var res = dataPost.data;\n        if (res != null && res.data != null) {\n          this.post = res.data;\n        } else {\n          toast.error(\"Không tìm thấy thông tin bài viết.\", {\n            \"theme\": \"colored\",\n            autoClose: 2000\n          });\n        }\n      } catch (e) {\n        if (e.status == 401) {\n          toast.error(\"Bạn không có quyền truy cập.\", {\n            \"theme\": \"colored\",\n            autoClose: 2000\n          });\n        } else {\n          if (e.data && e.data.Message) {\n            this.errMessage = e.data.Message;\n            toast.error(e.data.Message, {\n              \"theme\": \"colored\",\n              autoClose: 2000\n            });\n          } else {\n            toast.error(\"Không tìm thấy thông tin bài viết.\", {\n              \"theme\": \"colored\",\n              autoClose: 2000\n            });\n          }\n        }\n      }\n    },\n    async TaiFile() {\n      try {\n        const fileName = this.post.fileDinhKem;\n        await APIService.get(\"TinTuc/download?fileName=\" + fileName, {\n          responseType: 'blob'\n        });\n        //const url = window.URL.createObjectURL(new Blob([response.data]));\n        const link = document.createElement('a');\n        link.href = process.env.VUE_APP_URL + \"TinTuc/download?fileName=\" + fileName;\n        link.setAttribute('download', fileName);\n        document.body.appendChild(link);\n        link.click();\n      } catch (e) {\n        console.error('Error:', e);\n      }\n      ;\n    }\n  },\n  components: {\n    Layout,\n    PageHeader,\n    lottie: Lottie\n  }\n};","map":{"version":3,"names":["Layout","appConfig","PageHeader","animationData","Lottie","APIService","toast","Common","page","title","meta","name","content","description","data","items","text","href","active","defaultOptions","post","created","GetById","methods","formatDate","paramId","$route","params","id","dataPost","get","res","error","autoClose","e","status","Message","errMessage","TaiFile","fileName","fileDinhKem","responseType","link","document","createElement","process","env","VUE_APP_URL","setAttribute","body","appendChild","click","console","components","lottie"],"sources":["D:\\DA\\DoAnFrontEnd\\DoAnClient\\client\\src\\views\\dashboard\\QL_TinTuc\\Detail.vue"],"sourcesContent":["<script>\r\nimport Layout from \"../../../layouts/main.vue\";\r\nimport appConfig from \"../../../../app.config\";\r\nimport PageHeader from \"@/components/page-header\";\r\n\r\nimport animationData from \"@/components/Animation/uetqnvvg.json\";\r\nimport Lottie from \"@/components/widgets/lottie.vue\";\r\n\r\nimport APIService from \"@/helpers/ApiService\"\r\n\r\nimport { toast } from 'vue3-toastify';\r\nimport 'vue3-toastify/dist/index.css';\r\nimport Common from \"@/helpers/Common\"\r\n\r\nexport default {\r\n  page: {\r\n    title: \"Order Details\",\r\n    meta: [\r\n      {\r\n        name: \"description\",\r\n        content: appConfig.description,\r\n      },\r\n    ],\r\n  },\r\n  data() {\r\n    return {\r\n      title: \"Chi tiết bài viết\",\r\n      items: [\r\n        {\r\n          text: \"Tin tức\",\r\n          href: \"/\",\r\n        },\r\n        {\r\n          text: \"Chi tiết bài viết\",\r\n          active: true,\r\n        },\r\n      ],\r\n      defaultOptions: { animationData: animationData },\r\n      post:{},\r\n    };\r\n  },\r\n  created(){\r\n    this.GetById();\r\n  },  \r\n  methods:{\r\n    formatDate: Common.formatDate,\r\n    async GetById(){\r\n      try {\r\n        var paramId = this.$route.params.id;\r\n        var dataPost = await APIService.get(\"TinTuc/\" + paramId);\r\n        var res = dataPost.data;\r\n        if(res != null && res.data != null){\r\n          this.post = res.data\r\n        }else{\r\n          toast.error(\"Không tìm thấy thông tin bài viết.\",{\r\n            \"theme\": \"colored\",\r\n            autoClose: 2000\r\n          });\r\n        }\r\n      } catch (e) {\r\n        if(e.status == 401){\r\n          toast.error(\"Bạn không có quyền truy cập.\",{\r\n            \"theme\": \"colored\",\r\n            autoClose: 2000\r\n          });\r\n        }else {\r\n          if(e.data && e.data.Message){\r\n            this.errMessage = e.data.Message;\r\n            toast.error(e.data.Message,{\r\n              \"theme\": \"colored\",\r\n              autoClose: 2000\r\n            });\r\n          }else{\r\n            toast.error(\"Không tìm thấy thông tin bài viết.\",{\r\n              \"theme\": \"colored\",\r\n              autoClose: 2000\r\n            });\r\n          }\r\n        }\r\n      }\r\n    },\r\n    async TaiFile(){\r\n      try{\r\n        const fileName = this.post.fileDinhKem;\r\n        await APIService.get(\"TinTuc/download?fileName=\" + fileName, { responseType: 'blob' });\r\n        //const url = window.URL.createObjectURL(new Blob([response.data]));\r\n        const link = document.createElement('a');\r\n        link.href = process.env.VUE_APP_URL + \"TinTuc/download?fileName=\" + fileName;\r\n        link.setAttribute('download', fileName);\r\n        document.body.appendChild(link);\r\n        link.click();\r\n      }     \r\n      catch(e){\r\n        console.error('Error:', e);\r\n      };\r\n      \r\n    }\r\n  },\r\n  components: {\r\n    Layout,\r\n    PageHeader,\r\n    lottie: Lottie\r\n  },\r\n};\r\n</script>\r\n\r\n<template>\r\n  \r\n    <PageHeader :title=\"title\" :items=\"items\" />\r\n    <b-row>\r\n      <b-col xl=\"9\">\r\n        <b-card no-body>\r\n          <b-card-header>\r\n            <div class=\"d-flex align-items-center\">\r\n              <h5 class=\"card-title flex-grow-1 mb-0\">{{ post.title }}</h5>\r\n            </div>\r\n          </b-card-header>\r\n          <b-card-body>\r\n            <a-descriptions bordered  :labelStyle=\"{ width: '150px' }\" >\r\n              <a-descriptions-item :span=\"24\" label=\"Tiêu đề\">{{ post.title }}</a-descriptions-item>\r\n              <a-descriptions-item :span=\"24\" label=\"Hình ảnh\"><img style=\"height: 100px;\" :src=\"'http://localhost:44301/api/FileAndFolder/'+ post.hinhAnh\"/></a-descriptions-item>\r\n              <a-descriptions-item :span=\"24\" label=\"Danh mục\">{{ post.danhMuc }}</a-descriptions-item>\r\n              <a-descriptions-item :span=\"24\" label=\"Chuyên mục\">{{ post.chuyenMuc }}</a-descriptions-item>\r\n              <a-descriptions-item :span=\"24\" label=\"Trạng thái\">{{ post.trangThai }}</a-descriptions-item>\r\n              <a-descriptions-item :span=\"24\" label=\"Nổi bật\">{{ post.noiBat == true ? \"Có\" : \"Không\" }}</a-descriptions-item>\r\n              <a-descriptions-item :span=\"24\" label=\"Mô tả\">{{ post.description }}</a-descriptions-item>\r\n              <!-- <a-descriptions-item  :span=\"24\" label=\"Nội dung\"><div style=\"overflow: hidden; max-width: 100%;\"  v-html=\"post.content\"></div></a-descriptions-item> -->\r\n              <a-descriptions-item :span=\"24\" label=\"Nội dung\">\r\n  <div style=\"overflow: hidden; max-width: 600px;\">\r\n    <div v-html=\"post.content\" style=\"max-width: 100%;\"></div>\r\n  </div>\r\n</a-descriptions-item>\r\n              <a-descriptions-item :span=\"24\" label=\"File đính kèm\"><a-button  @click=\"TaiFile\">Tải xuống</a-button></a-descriptions-item>\r\n            </a-descriptions>\r\n          </b-card-body>\r\n        </b-card>\r\n        \r\n      </b-col>\r\n      <b-col xl=\"3\">\r\n        <b-card no-body>\r\n          <b-card-header>\r\n            <h5 class=\"card-title mb-0\">\r\n              <i class=\"ri-map-pin-line align-middle me-1 text-muted\"></i>\r\n              Thông tin công khai\r\n            </h5>\r\n          </b-card-header>\r\n          <b-card-body>\r\n            <ul class=\"list-unstyled vstack gap-2 fs-13 mb-0\">\r\n              <li class=\"fw-medium fs-14\">Trạng thái: {{ post.trangThai }}</li>\r\n                <!-- <span class=\"badge text-uppercase\" :class=\"{\r\n                          'badge-soft-success': post.isPublic == true,\r\n                          'badge-soft-danger': post.isPublic == false,\r\n                        }\">{{ post.isPublic === 0 ? \"Bản nháp\" : \"Đã xuất bản\" }}</span></li> -->\r\n\r\n              <li>Ngày xuất bản: {{ formatDate(post.publicDate) }}</li>\r\n              <li>Hẹn ngày đăng: {{ formatDate(post.henGioDang) }}</li>\r\n              <li>Trạng thái đăng: {{ post.trangThaiDang == true? \"Đã đăng\" : \"Chưa đăng\" }}</li>\r\n              <li>Danh mục: {{ post.danhMuc }}</li>\r\n            </ul>\r\n          </b-card-body>\r\n        </b-card>\r\n      </b-col>\r\n    </b-row>\r\n\r\n</template>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}