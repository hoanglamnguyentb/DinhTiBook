{"ast":null,"code":"import APIService from \"@/helpers/ApiService\";\nexport default {\n  data() {\n    return {\n      isLoading: false,\n      open: false,\n      labelCol: {\n        span: 6\n      },\n      wrapperCol: {\n        span: 14\n      },\n      id: undefined,\n      danhMuc: {\n        tenDanhMuc: '',\n        thuTuHienThi: '',\n        maDM: '',\n        ghiChu: '',\n        tepDinhKem: ''\n      },\n      rules: {\n        tenDanhMuc: [{\n          required: true,\n          message: 'Tên danh mục là bắt buộc',\n          trigger: 'change'\n        }, {\n          min: 1,\n          max: 20,\n          message: 'Độ dài từ 1-20',\n          trigger: 'blur'\n        }],\n        maDM: [{\n          required: true,\n          message: 'Mã danh mục là bắt buộc',\n          trigger: 'change'\n        }, {\n          min: 1,\n          max: 20,\n          message: 'Độ dài từ 3-20',\n          trigger: 'blur'\n        }],\n        // thuTuHienThi: [\n        //   {required: false},\n        //   {\n        //     type: 'integer',\n        //     message: 'Thứ tự hiển thị phải là một số nguyên',\n        //     trigger: 'blur',\n        //   }\n        // ],\n        ghiChu: [{\n          required: false\n        }]\n      }\n    };\n  },\n  methods: {\n    async showModal(id) {\n      this.open = true;\n      if (id) {\n        var res = await APIService.get(`/DanhMuc/${id}`);\n        this.id = id;\n        this.danhMuc = res.data.data;\n      }\n    },\n    closeModal() {\n      this.open = false;\n      this.id = undefined;\n      this.resetForm();\n    },\n    handleOk() {\n      this.$refs.formRef.validate().then(async () => {\n        let duplicateCategory = false;\n        if (this.id) {\n          this.isLoading = true;\n          var response = await APIService.put(`/DanhMuc/edit/${this.id}`, this.danhMuc);\n          if (response.data.message == \"Danh mục bị trùng\") {\n            duplicateCategory = true;\n            this.isLoading = false;\n          } else {\n            this.isLoading = true;\n            this.$message.success('Cập nhật danh mục thành công');\n          }\n        } else {\n          this.isLoading = true;\n          var response = await APIService.post(\"/DanhMuc/create\", this.danhMuc);\n          if (response.data.message == \"Danh mục bị trùng\") {\n            duplicateCategory = true;\n            this.isLoading = false;\n          } else {\n            this.$message.success('Thêm danh mục thành công');\n          }\n        }\n        if (duplicateCategory) {\n          this.$message.error(\"Trùng danh mục\");\n        } else {\n          this.closeModal();\n          this.$emit('addSuccess');\n        }\n      }).catch(error => {\n        console.log('error', error);\n      }).finally(() => {\n        this.isLoading = false;\n      });\n    },\n    resetForm() {\n      this.$refs.formRef.resetFields();\n    }\n  }\n};","map":{"version":3,"names":["APIService","data","isLoading","open","labelCol","span","wrapperCol","id","undefined","danhMuc","tenDanhMuc","thuTuHienThi","maDM","ghiChu","tepDinhKem","rules","required","message","trigger","min","max","methods","showModal","res","get","closeModal","resetForm","handleOk","$refs","formRef","validate","then","duplicateCategory","response","put","$message","success","post","error","$emit","catch","console","log","finally","resetFields"],"sources":["D:\\HINET_1\\BacKan\\client\\src\\views\\dashboard\\QL_DanhMuc\\ModalAddEditDanhMuc.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <a-modal v-model:open=\"open\" :title=\"id ? 'Cập nhật danh mục' : 'Thêm danh mục'\" @ok=\"handleOk\" @cancel=\"closeModal\"\r\n      :confirm-loading=\"isLoading\">\r\n      <a-form ref=\"formRef\" :model=\"danhMuc\" :rules=\"rules\" layout=\"vertical\">\r\n        <a-form-item ref=\"ten\" label=\"Tên danh mục\" name=\"tenDanhMuc\">\r\n          <a-input v-model:value=\"danhMuc.tenDanhMuc\" />\r\n        </a-form-item>\r\n        <a-form-item ref=\"thutu\" label=\"Thứ tự hiển thị\" name=\"thuTuHienThi\">\r\n          <a-input-number v-model:value=\"danhMuc.thuTuHienThi\" />\r\n        </a-form-item>\r\n        <a-form-item ref=\"ma\" label=\"Mã danh mục\" name=\"maDM\">\r\n          <a-input :readonly=\"id ? true : false\" v-model:value=\"danhMuc.maDM\" />\r\n        </a-form-item>\r\n\r\n        <a-form-item ref=\"ghiChu\" label=\"Ghi chú\" name=\"ghiChu\">\r\n          <a-textarea v-model:value=\"danhMuc.ghiChu\" />\r\n        </a-form-item>\r\n      </a-form>\r\n    </a-modal>\r\n  </div>\r\n</template>\r\n<script>\r\nimport APIService from \"@/helpers/ApiService\"\r\n\r\nexport default {\r\n\r\n  data() {\r\n    return {\r\n      isLoading: false,\r\n      open: false,\r\n      labelCol: {\r\n        span: 6,\r\n      },\r\n      wrapperCol: {\r\n        span: 14,\r\n      },\r\n      id: undefined,\r\n      danhMuc: {\r\n        tenDanhMuc: '',\r\n        thuTuHienThi: '',\r\n        maDM: '',\r\n        ghiChu: '',\r\n        tepDinhKem: '',\r\n      },\r\n      rules: {\r\n        tenDanhMuc: [\r\n          {\r\n            required: true,\r\n            message: 'Tên danh mục là bắt buộc',\r\n            trigger: 'change',\r\n          },\r\n          {\r\n            min: 1,\r\n            max: 20,\r\n            message: 'Độ dài từ 1-20',\r\n            trigger: 'blur',\r\n          },\r\n        ],\r\n        maDM: [\r\n          {\r\n            required: true,\r\n            message: 'Mã danh mục là bắt buộc',\r\n            trigger: 'change',\r\n          },\r\n          {\r\n            min: 1,\r\n            max: 20,\r\n            message: 'Độ dài từ 3-20',\r\n            trigger: 'blur',\r\n          },\r\n        ],\r\n        // thuTuHienThi: [\r\n        //   {required: false},\r\n        //   {\r\n        //     type: 'integer',\r\n        //     message: 'Thứ tự hiển thị phải là một số nguyên',\r\n        //     trigger: 'blur',\r\n        //   }\r\n        // ],\r\n        ghiChu: [\r\n          { required: false }\r\n        ]\r\n\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    async showModal(id) {\r\n      this.open = true\r\n      if (id) {\r\n        var res = await APIService.get(`/DanhMuc/${id}`)\r\n        this.id = id\r\n        this.danhMuc = res.data.data\r\n      }\r\n    },\r\n    closeModal() {\r\n      this.open = false\r\n      this.id = undefined\r\n      this.resetForm()\r\n    },\r\n    handleOk() {\r\n      this.$refs.formRef.validate().then(async () => {\r\n\r\n        let duplicateCategory = false; \r\n        if (this.id) {\r\n          this.isLoading = true;\r\n          var response = await APIService.put(`/DanhMuc/edit/${this.id}`, this.danhMuc)\r\n          \r\n          if (response.data.message == \"Danh mục bị trùng\") {\r\n            duplicateCategory = true; \r\n            this.isLoading = false;\r\n          } else {\r\n            this.isLoading = true;\r\n            this.$message.success('Cập nhật danh mục thành công')\r\n          }\r\n        } else {\r\n          this.isLoading = true;\r\n          var response = await APIService.post(\"/DanhMuc/create\", this.danhMuc)\r\n         \r\n          if (response.data.message == \"Danh mục bị trùng\") {\r\n            duplicateCategory = true; \r\n            this.isLoading = false;\r\n          } else {\r\n            this.$message.success('Thêm danh mục thành công')\r\n          }\r\n        }\r\n  \r\n        if (duplicateCategory) {\r\n          this.$message.error(\"Trùng danh mục\")\r\n        } else {\r\n          this.closeModal()\r\n          this.$emit('addSuccess')\r\n        }\r\n      }).catch(error => {\r\n        console.log('error', error);\r\n      }).finally(()=>{\r\n        this.isLoading = false;\r\n      })\r\n    },\r\n    resetForm() {\r\n      this.$refs.formRef.resetFields();\r\n    },\r\n  }\r\n}\r\n\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}