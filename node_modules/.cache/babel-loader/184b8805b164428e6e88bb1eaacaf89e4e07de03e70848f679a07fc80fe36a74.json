{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { required, email, helpers } from \"@vuelidate/validators\";\nimport useVuelidate from \"@vuelidate/core\";\nimport axios from 'axios';\nimport appConfig from \"../../../../app.config\";\nexport default {\n  setup() {\n    return {\n      v$: useVuelidate()\n    };\n  },\n  page: {\n    title: \"Register\",\n    meta: [{\n      name: \"description\",\n      content: appConfig.description\n    }]\n  },\n  components: {},\n  data() {\n    return {\n      user: {\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        confirm_password: \"\"\n      },\n      submitted: false,\n      regError: null,\n      tryingToRegister: false,\n      isRegisterError: false,\n      registerSuccess: false\n    };\n  },\n  validations: {\n    user: {\n      username: {\n        required: helpers.withMessage(\"Username is required\", required)\n      },\n      email: {\n        required: helpers.withMessage(\"Email is required\", required),\n        email: helpers.withMessage(\"Please enter valid email\", email)\n      },\n      password: {\n        required: helpers.withMessage(\"Password is required\", required)\n      },\n      confirm_password: {\n        required: helpers.withMessage(\"Confirm Password is required\", required)\n      }\n    }\n  },\n  computed: {\n    notification() {\n      return this.$store ? this.$store.state.notification : null;\n    }\n  },\n  methods: {\n    // Try to register the user in with the email, username\n    // and password they provided.\n    async tryToRegisterIn() {\n      this.submitted = true;\n      // stop here if form is invalid\n      this.v$.$touch();\n      const result = await axios.post('https://api-node.themesbrand.website/auth/signup', {\n        email: this.user.email,\n        password: this.user.password,\n        confirm_password: this.user.confirm_password\n      });\n      if (result.data.status == 'errors') {\n        this.isRegisterError = true;\n        return this.regError = result.data.message;\n      }\n      localStorage.setItem('jwt', result.data.token);\n      this.$router.push({\n        path: '/'\n      });\n    }\n  }\n};","map":{"version":3,"names":["required","email","helpers","useVuelidate","axios","appConfig","setup","v$","page","title","meta","name","content","description","components","data","user","username","password","confirm_password","submitted","regError","tryingToRegister","isRegisterError","registerSuccess","validations","withMessage","computed","notification","$store","state","methods","tryToRegisterIn","$touch","result","post","status","message","localStorage","setItem","token","$router","push","path"],"sources":["C:\\Users\\Admin\\Desktop\\DoAnClient\\client\\src\\views\\dashboard\\account\\register.vue"],"sourcesContent":["<script>\r\nimport {\r\n  required,\r\n  email,\r\n  helpers\r\n} from \"@vuelidate/validators\";\r\nimport useVuelidate from \"@vuelidate/core\";\r\nimport axios from 'axios';\r\nimport appConfig from \"../../../../app.config\";\r\n\r\nexport default {\r\n  setup() {\r\n    return {\r\n      v$: useVuelidate()\r\n    };\r\n  },\r\n  page: {\r\n    title: \"Register\",\r\n    meta: [{\r\n      name: \"description\",\r\n      content: appConfig.description,\r\n    },],\r\n  },\r\n  components: {},\r\n  data() {\r\n    return {\r\n      user: {\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirm_password: \"\",\r\n      },\r\n      submitted: false,\r\n      regError: null,\r\n      tryingToRegister: false,\r\n      isRegisterError: false,\r\n      registerSuccess: false,\r\n    };\r\n  },\r\n  validations: {\r\n    user: {\r\n      username: {\r\n        required: helpers.withMessage(\"Username is required\", required),\r\n      },\r\n      email: {\r\n        required: helpers.withMessage(\"Email is required\", required),\r\n        email: helpers.withMessage(\"Please enter valid email\", email),\r\n      },\r\n      password: {\r\n        required: helpers.withMessage(\"Password is required\", required),\r\n      },\r\n      confirm_password: {\r\n        required: helpers.withMessage(\"Confirm Password is required\", required),\r\n      },\r\n    },\r\n  },\r\n  computed: {\r\n    notification() {\r\n      return this.$store ? this.$store.state.notification : null;\r\n    },\r\n  },\r\n  methods: {\r\n\r\n\r\n    // Try to register the user in with the email, username\r\n    // and password they provided.\r\n    async tryToRegisterIn() {\r\n      this.submitted = true;\r\n      // stop here if form is invalid\r\n      this.v$.$touch();\r\n      const result = await axios.post('https://api-node.themesbrand.website/auth/signup', {\r\n        email: this.user.email,\r\n        password: this.user.password,\r\n        confirm_password: this.user.confirm_password\r\n      });\r\n      if (result.data.status == 'errors') {\r\n        this.isRegisterError = true;\r\n        return this.regError = result.data.message;\r\n      }\r\n      localStorage.setItem('jwt', result.data.token);\r\n      this.$router.push({\r\n        path: '/'\r\n      });\r\n\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"auth-page-wrapper pt-5\">\r\n    <div class=\"auth-one-bg-position auth-one-bg\" id=\"auth-particles\">\r\n      <div class=\"bg-overlay\"></div>\r\n\r\n      <div class=\"shape\">\r\n\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\r\n          viewBox=\"0 0 1440 120\">\r\n          <path d=\"M 0,36 C 144,53.6 432,123.2 720,124 C 1008,124.8 1296,56.8 1440,40L1440 140L0 140z\"></path>\r\n        </svg>\r\n      </div>\r\n      <Particles id=\"tsparticles\" :options=\"{\r\n        particles: {\r\n          number: {\r\n            value: 90,\r\n            density: {\r\n              enable: true,\r\n              value_area: 800,\r\n            },\r\n          },\r\n          color: {\r\n            value: '#ffffff',\r\n          },\r\n          shape: {\r\n            type: 'circle',\r\n            stroke: {\r\n              width: 0,\r\n              color: '#000000',\r\n            },\r\n            polygon: {\r\n              nb_sides: 5,\r\n            },\r\n            image: {\r\n              src: 'img/github.svg',\r\n              width: 100,\r\n              height: 100,\r\n            },\r\n          },\r\n          opacity: {\r\n            value: 0.8,\r\n            random: true,\r\n            anim: {\r\n              enable: true,\r\n              speed: 1,\r\n              opacity_min: 0,\r\n              sync: false,\r\n            },\r\n          },\r\n          size: {\r\n            value: 4,\r\n            random: true,\r\n            anim: {\r\n              enable: false,\r\n              speed: 4,\r\n              size_min: 0.2,\r\n              sync: false,\r\n            },\r\n          },\r\n          line_linked: {\r\n            enable: false,\r\n            distance: 150,\r\n            color: '#ffffff',\r\n            opacity: 0.4,\r\n            width: 1,\r\n          },\r\n          move: {\r\n            enable: true,\r\n            speed: 2,\r\n            direction: 'none',\r\n            random: false,\r\n            straight: false,\r\n            out_mode: 'out',\r\n            attract: {\r\n              enable: false,\r\n              rotateX: 600,\r\n              rotateY: 1200,\r\n            },\r\n          },\r\n        },\r\n        interactivity: {\r\n          detect_on: 'canvas',\r\n          events: {\r\n            onhover: {\r\n              enable: true,\r\n              mode: 'bubble',\r\n            },\r\n            onclick: {\r\n              enable: true,\r\n              mode: 'repulse',\r\n            },\r\n            resize: true,\r\n          },\r\n          modes: {\r\n            grab: {\r\n              distance: 400,\r\n              line_linked: {\r\n                opacity: 1,\r\n              },\r\n            },\r\n            bubble: {\r\n              distance: 400,\r\n              size: 4,\r\n              duration: 2,\r\n              opacity: 0.8,\r\n              speed: 3,\r\n            },\r\n            repulse: {\r\n              distance: 200,\r\n            },\r\n            push: {\r\n              particles_nb: 4,\r\n            },\r\n            remove: {\r\n              particles_nb: 2,\r\n            },\r\n          },\r\n        },\r\n        retina_detect: true,\r\n        config_demo: {\r\n          hide_card: false,\r\n          background_color: '#b61924',\r\n          background_image: '',\r\n          background_position: '50% 50%',\r\n          background_repeat: 'no-repeat',\r\n          background_size: 'cover',\r\n        },\r\n      }\" />\r\n    </div>\r\n\r\n    <div class=\"auth-page-content\">\r\n      <b-container>\r\n        <b-row>\r\n          <b-col lg=\"12\">\r\n            <div class=\"text-center mt-sm-5 mb-4 text-white-50\">\r\n              <div>\r\n                <router-link to=\"/\" class=\"d-inline-block auth-logo\">\r\n                  <img src=\"@/assets/images/logo-light.png\" alt=\"\" height=\"20\">\r\n                </router-link>\r\n              </div>\r\n              <p class=\"mt-3 fs-15 fw-medium\">Premium Admin & Dashboard Template</p>\r\n            </div>\r\n          </b-col>\r\n        </b-row>\r\n\r\n        <b-row class=\"justify-content-center\">\r\n          <b-col md=\"8\" lg=\"6\" xl=\"5\">\r\n            <b-card no-body class=\"mt-4\">\r\n\r\n              <b-card-body class=\"p-4\">\r\n                <div class=\"text-center mt-2\">\r\n                  <h5 class=\"text-primary\">Create New Account</h5>\r\n                  <p class=\"text-muted\">Get your free velzon account now</p>\r\n                </div>\r\n                <div class=\"p-2 mt-4\">\r\n                  <form class=\"needs-validation\" @submit.prevent=\"tryToRegisterIn\">\r\n                    <b-alert v-model=\"registerSuccess\" class=\"mt-3\" variant=\"success\" dismissible>Registration\r\n                      successfull.</b-alert>\r\n\r\n                    <b-alert v-model=\"isRegisterError\" class=\"mt-3\" variant=\"danger\" dismissible>{{ regError }}\r\n                    </b-alert>\r\n\r\n                    <div v-if=\"notification.message\" :class=\"'alert ' + notification.type\">\r\n                      {{ notification.message }}\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"useremail\" class=\"form-label\">Email <span class=\"text-danger\">*</span></label>\r\n                      <input type=\"email\" class=\"form-control\" v-model=\"user.email\" id=\"useremail\" :class=\"{\r\n                        'is-invalid': submitted && v$.user.email.$error,\r\n                      }\" placeholder=\"Enter email address\">\r\n                      <div v-for=\"(item, index) in v$.user.email.$errors\" :key=\"index\" class=\"invalid-feedback\">\r\n                        <span v-if=\"item.$message\">{{ item.$message }}</span>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"username\" class=\"form-label\">Username <span class=\"text-danger\">*</span></label>\r\n                      <input type=\"text\" class=\"form-control\" v-model=\"user.username\" :class=\"{\r\n                        'is-invalid': submitted && v$.user.username.$error,\r\n                      }\" id=\"username\" placeholder=\"Enter username\">\r\n                      <div v-if=\"submitted && v$.user.username.$error\" class=\"invalid-feedback\">\r\n                        <span v-if=\"v$.user.username.required.$message\">{{\r\n                            v$.user.username.required.$message\r\n                        }}</span>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"mb-2\">\r\n                      <label for=\"userpassword\" class=\"form-label\">Password <span class=\"text-danger\">*</span></label>\r\n                      <input type=\"password\" class=\"form-control\" v-model=\"user.password\" :class=\"{\r\n                        'is-invalid': submitted && v$.user.password.$error,\r\n                      }\" id=\"userpassword\" placeholder=\"Enter password\">\r\n                      <div v-if=\"submitted && v$.user.password.$error\" class=\"invalid-feedback\">\r\n                        <span v-if=\"v$.user.password.required.$message\">{{\r\n                            v$.user.password.required.$message\r\n                        }}</span>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"mb-2\">\r\n                      <label for=\"userpassword\" class=\"form-label\">Confirm Password <span\r\n                          class=\"text-danger\">*</span></label>\r\n                      <input type=\"password\" class=\"form-control\" v-model=\"user.confirm_password\" :class=\"{\r\n                        'is-invalid': submitted && v$.user.password.$error,\r\n                      }\" id=\"userconfirmpassword\" placeholder=\"Enter password\">\r\n                      <div v-if=\"submitted && v$.user.confirm_password.$error\" class=\"invalid-feedback\">\r\n                        <span v-if=\"v$.user.password.required.$message\">{{\r\n                            v$.user.confirm_password.required.$message\r\n                        }}</span>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"mb-4\">\r\n                      <p class=\"mb-0 fs-12 text-muted fst-italic\">By registering you agree to the Velzon <b-link\r\n                          href=\"#\" class=\"text-primary text-decoration-underline fst-normal fw-medium\">Terms of Use\r\n                        </b-link>\r\n                      </p>\r\n                    </div>\r\n\r\n                    <div class=\"mt-4\">\r\n                      <b-button variant=\"success\" class=\"w-100\" type=\"submit\">Sign Up</b-button>\r\n                    </div>\r\n\r\n                    <div class=\"mt-4 text-center\">\r\n                      <div class=\"signin-other-title\">\r\n                        <h5 class=\"fs-13 mb-4 title text-muted\">Create account with</h5>\r\n                      </div>\r\n\r\n                      <div>\r\n                        <b-button type=\"button\" variant=\"primary\" class=\"btn-icon\"><i\r\n                            class=\"ri-facebook-fill fs-16\"></i></b-button>\r\n                        <b-button type=\"button\" variant=\"danger\" class=\"btn-icon ms-1\"><i\r\n                            class=\"ri-google-fill fs-16\"></i></b-button>\r\n                        <b-button type=\"button\" variant=\"dark\" class=\"btn-icon ms-1\"><i\r\n                            class=\"ri-github-fill fs-16\"></i></b-button>\r\n                        <b-button type=\"button\" variant=\"info\" class=\"btn-icon ms-1\"><i\r\n                            class=\"ri-twitter-fill fs-16\"></i></b-button>\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n\r\n                </div>\r\n              </b-card-body>\r\n            </b-card>\r\n\r\n            <div class=\"mt-4 text-center\">\r\n              <p class=\"mb-0\">Already have an account ? <router-link to=\"/login\"\r\n                  class=\"fw-semibold text-primary text-decoration-underline\"> Signin </router-link>\r\n              </p>\r\n            </div>\r\n          </b-col>\r\n        </b-row>\r\n      </b-container>\r\n    </div>\r\n\r\n    <footer class=\"footer\">\r\n      <b-container>\r\n        <b-row>\r\n          <b-col lg=\"12\">\r\n            <div class=\"text-center\">\r\n              <p class=\"mb-0 text-muted\">&copy; {{ new Date().getFullYear() }} Velzon. Crafted with <i\r\n                  class=\"mdi mdi-heart text-danger\"></i> by Themesbrand</p>\r\n            </div>\r\n          </b-col>\r\n        </b-row>\r\n      </b-container>\r\n    </footer>\r\n  </div>\r\n</template>"],"mappings":";AACA,SACEA,QAAQ,EACRC,KAAK,EACLC,OAAM,QACD,uBAAuB;AAC9B,OAAOC,YAAW,MAAO,iBAAiB;AAC1C,OAAOC,KAAI,MAAO,OAAO;AACzB,OAAOC,SAAQ,MAAO,wBAAwB;AAE9C,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN,OAAO;MACLC,EAAE,EAAEJ,YAAY,CAAC;IACnB,CAAC;EACH,CAAC;EACDK,IAAI,EAAE;IACJC,KAAK,EAAE,UAAU;IACjBC,IAAI,EAAE,CAAC;MACLC,IAAI,EAAE,aAAa;MACnBC,OAAO,EAAEP,SAAS,CAACQ;IACrB,CAAC;EACH,CAAC;EACDC,UAAU,EAAE,CAAC,CAAC;EACdC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;QACJC,QAAQ,EAAE,EAAE;QACZhB,KAAK,EAAE,EAAE;QACTiB,QAAQ,EAAE,EAAE;QACZC,gBAAgB,EAAE;MACpB,CAAC;MACDC,SAAS,EAAE,KAAK;MAChBC,QAAQ,EAAE,IAAI;MACdC,gBAAgB,EAAE,KAAK;MACvBC,eAAe,EAAE,KAAK;MACtBC,eAAe,EAAE;IACnB,CAAC;EACH,CAAC;EACDC,WAAW,EAAE;IACXT,IAAI,EAAE;MACJC,QAAQ,EAAE;QACRjB,QAAQ,EAAEE,OAAO,CAACwB,WAAW,CAAC,sBAAsB,EAAE1B,QAAQ;MAChE,CAAC;MACDC,KAAK,EAAE;QACLD,QAAQ,EAAEE,OAAO,CAACwB,WAAW,CAAC,mBAAmB,EAAE1B,QAAQ,CAAC;QAC5DC,KAAK,EAAEC,OAAO,CAACwB,WAAW,CAAC,0BAA0B,EAAEzB,KAAK;MAC9D,CAAC;MACDiB,QAAQ,EAAE;QACRlB,QAAQ,EAAEE,OAAO,CAACwB,WAAW,CAAC,sBAAsB,EAAE1B,QAAQ;MAChE,CAAC;MACDmB,gBAAgB,EAAE;QAChBnB,QAAQ,EAAEE,OAAO,CAACwB,WAAW,CAAC,8BAA8B,EAAE1B,QAAQ;MACxE;IACF;EACF,CAAC;EACD2B,QAAQ,EAAE;IACRC,YAAYA,CAAA,EAAG;MACb,OAAO,IAAI,CAACC,MAAK,GAAI,IAAI,CAACA,MAAM,CAACC,KAAK,CAACF,YAAW,GAAI,IAAI;IAC5D;EACF,CAAC;EACDG,OAAO,EAAE;IAGP;IACA;IACA,MAAMC,eAAeA,CAAA,EAAG;MACtB,IAAI,CAACZ,SAAQ,GAAI,IAAI;MACrB;MACA,IAAI,CAACb,EAAE,CAAC0B,MAAM,CAAC,CAAC;MAChB,MAAMC,MAAK,GAAI,MAAM9B,KAAK,CAAC+B,IAAI,CAAC,kDAAkD,EAAE;QAClFlC,KAAK,EAAE,IAAI,CAACe,IAAI,CAACf,KAAK;QACtBiB,QAAQ,EAAE,IAAI,CAACF,IAAI,CAACE,QAAQ;QAC5BC,gBAAgB,EAAE,IAAI,CAACH,IAAI,CAACG;MAC9B,CAAC,CAAC;MACF,IAAIe,MAAM,CAACnB,IAAI,CAACqB,MAAK,IAAK,QAAQ,EAAE;QAClC,IAAI,CAACb,eAAc,GAAI,IAAI;QAC3B,OAAO,IAAI,CAACF,QAAO,GAAIa,MAAM,CAACnB,IAAI,CAACsB,OAAO;MAC5C;MACAC,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEL,MAAM,CAACnB,IAAI,CAACyB,KAAK,CAAC;MAC9C,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;QAChBC,IAAI,EAAE;MACR,CAAC,CAAC;IAEJ;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}