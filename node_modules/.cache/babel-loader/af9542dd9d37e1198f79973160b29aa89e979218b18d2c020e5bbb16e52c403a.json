{"ast":null,"code":"import APIService from \"@/helpers/ApiService\";\nexport default {\n  data() {\n    return {\n      previewVisible: false,\n      previewImage: '',\n      previewTitle: '',\n      fileList: [],\n      file: '',\n      parentId: '1e03b110-a719-44b9-4dce-08dc58ae1b5b'\n    };\n  },\n  methods: {\n    getBase64(img, callback) {\n      const reader = new FileReader();\n      reader.addEventListener('load', () => callback(reader.result));\n      reader.readAsDataURL(img);\n    },\n    handleCancel() {\n      this.previewVisible = false;\n      this.previewTitle = '';\n    },\n    async handlePreview(file) {\n      if (!file.url && !file.preview) {\n        console.log('fileURL', file.url);\n        console.log('FilePreview', file.preview);\n        this.getBase64(file.originFileObj, preview => {\n          file.preview = preview;\n          this.previewImage = file.url || file.preview;\n          this.previewVisible = true;\n          this.previewTitle = file.name || file.url.substring(file.url.lastIndexOf('/') + 1);\n        });\n      } else {\n        this.previewImage = file.url || file.preview;\n        this.previewVisible = true;\n        this.previewTitle = file.name || file.url.substring(file.url.lastIndexOf('/') + 1);\n      }\n    },\n    async uploadImage() {\n      for (const file of this.fileList) {\n        await this.handleUpload(file);\n      }\n    },\n    async handleUpload(file) {\n      try {\n        const formData = new FormData();\n        formData.append('Files', file.file);\n        console.log('file file', file.file);\n        const response = await APIService.post(`/FileManager/Upload?ParentID=${this.parentId}`, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        console.log('Thành công:', response.status);\n      } catch (error) {\n        console.error('Lỗi khi gửi yêu cầu:', error);\n        console.error('Response status:', error.response.status);\n        console.error('Response data:', error.response.data);\n      }\n    }\n  }\n};","map":{"version":3,"names":["APIService","data","previewVisible","previewImage","previewTitle","fileList","file","parentId","methods","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","handleCancel","handlePreview","url","preview","console","log","originFileObj","name","substring","lastIndexOf","uploadImage","handleUpload","formData","FormData","append","response","post","headers","status","error"],"sources":["D:\\DA\\DoAnClient\\client\\src\\components\\FileManager\\FileManager.vue"],"sourcesContent":["<!-- <template>\r\n  <div class=\"clearfix\">\r\n    <a-upload\r\n      v-model:file-list=\"fileList\"\r\n      name=\"file\"\r\n      list-type=\"picture-card\"\r\n      @preview=\"handlePreview\"\r\n      :customRequest=\"handleUpload\"\r\n    >\r\n      <div v-if=\"fileList.length < 8\">\r\n        <plus-outlined />\r\n        <div style=\"margin-top: 8px\">Tải lên</div>\r\n      </div>\r\n    </a-upload>\r\n    <a-modal :open=\"previewVisible\" :title=\"previewTitle\" :footer=\"null\" @cancel=\"handleCancel\">\r\n      <img alt=\"ví dụ\" style=\"width: 100%\" :src=\"previewImage\" />\r\n    </a-modal>\r\n  </div>\r\n\r\n  <a-button @click=\"uploadImage\">Lưu</a-button>\r\n</template>\r\n\r\n<script>\r\nimport APIService from \"@/helpers/ApiService\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      previewVisible: false,\r\n      previewImage: '',\r\n      previewTitle: '',\r\n      fileList: [],\r\n      parentId: '1e03b110-a719-44b9-4dce-08dc58ae1b5b'\r\n    };\r\n  },\r\n  methods: {\r\n    getBase64(img, callback) {\r\n      const reader = new FileReader();\r\n      reader.addEventListener('load', () => callback(reader.result));\r\n      reader.readAsDataURL(img);\r\n    },\r\n    handleCancel() {\r\n      this.previewVisible = false;\r\n      this.previewTitle = '';\r\n    },\r\n    async handlePreview(file) {\r\n      if (!file.url && !file.preview) {\r\n        this.getBase64(file.originFileObj, (preview) => {\r\n          file.preview = preview;\r\n          this.previewImage = file.url || file.preview;\r\n          this.previewVisible = true;\r\n          this.previewTitle = file.name || file.url.substring(file.url.lastIndexOf('/') + 1);\r\n        });\r\n      } else {\r\n        this.previewImage = file.url || file.preview;\r\n        this.previewVisible = true;\r\n        this.previewTitle = file.name || file.url.substring(file.url.lastIndexOf('/') + 1);\r\n      }\r\n    },\r\n    async uploadImage() {\r\n      for (const file of this.fileList) {\r\n        await this.handleUpload(file);\r\n      }\r\n    },\r\n    async handleUpload(file) {\r\n  try {\r\n    const formData = new FormData();\r\n\r\n    // Đặt tên trường dữ liệu là \"Files\" và chèn tệp vào đó\r\n    formData.append('Files', file.file);\r\n    console.log('formdata', formData)\r\n    // Gọi API để tải lên tệp\r\n    const response = await APIService.post(`FileManager/Upload?ParentID=${this.parentId}`, formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    });\r\n\r\n    // Xử lý phản hồi từ máy chủ nếu cần\r\n    console.log('Thành công:', response.status);\r\n  } catch (error) {\r\n    // Xử lý lỗi nếu có\r\n    console.error('Lỗi khi gửi yêu cầu:', error);\r\n    console.error('Response status:', error.response.status);\r\n    console.error('Response data:', error.response.data);\r\n  }\r\n}\r\n\r\n\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.ant-upload-select-picture-card i {\r\n  font-size: 32px;\r\n  color: #999;\r\n}\r\n\r\n.ant-upload-select-picture-card .ant-upload-text {\r\n  margin-top: 8px;\r\n  color: #666;\r\n}\r\n</style> -->\r\n\r\n\r\n\r\n<template>\r\n  <div class=\"clearfix\">\r\n    <a-upload\r\n      v-model:file-list=\"fileList\"\r\n      name=\"file\"\r\n      list-type=\"picture-card\"\r\n      @preview=\"handlePreview\"\r\n    >\r\n      <div v-if=\"fileList.length < 8\">\r\n        <plus-outlined />\r\n        <div style=\"margin-top: 8px\">Tải lên</div>\r\n      </div>\r\n    </a-upload>\r\n    <a-modal :open=\"previewVisible\" :title=\"previewTitle\" :footer=\"null\" @cancel=\"handleCancel\">\r\n      <img alt=\"ví dụ\" style=\"width: 100%\" :src=\"previewImage\" />\r\n    </a-modal>\r\n\r\n    <a-button @click=\"uploadImage\">Lưu</a-button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport APIService from \"@/helpers/ApiService\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      previewVisible: false,\r\n      previewImage: '',\r\n      previewTitle: '',\r\n      fileList: [],\r\n      file:'',\r\n      parentId: '1e03b110-a719-44b9-4dce-08dc58ae1b5b'\r\n    };\r\n  },\r\n  methods: {\r\n    getBase64(img, callback) {\r\n      const reader = new FileReader();\r\n      reader.addEventListener('load', () => callback(reader.result));\r\n      reader.readAsDataURL(img);\r\n    },\r\n    handleCancel() {\r\n      this.previewVisible = false;\r\n      this.previewTitle = '';\r\n    },\r\n    async handlePreview(file) {\r\n      if (!file.url && !file.preview) {\r\n        console.log('fileURL', file.url)\r\n        console.log('FilePreview', file.preview)\r\n        this.getBase64(file.originFileObj, (preview) => {\r\n          file.preview = preview;\r\n          this.previewImage = file.url || file.preview;\r\n          this.previewVisible = true;\r\n          this.previewTitle = file.name || file.url.substring(file.url.lastIndexOf('/') + 1);\r\n        });\r\n      } else {\r\n        this.previewImage = file.url || file.preview;\r\n        this.previewVisible = true;\r\n        this.previewTitle = file.name || file.url.substring(file.url.lastIndexOf('/') + 1);\r\n      }\r\n    },\r\n    async uploadImage() {\r\n      \r\n      for (const file of this.fileList) {\r\n        await this.handleUpload(file);\r\n      }\r\n    },\r\n    async handleUpload(file) {\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append('Files', file.file);\r\n        console.log('file file', file.file)\r\n        const response = await APIService.post(`/FileManager/Upload?ParentID=${this.parentId}`, formData, {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n          }\r\n        });\r\n\r\n        console.log('Thành công:', response.status);\r\n      } catch (error) {\r\n        console.error('Lỗi khi gửi yêu cầu:', error);\r\n        console.error('Response status:', error.response.status);\r\n        console.error('Response data:', error.response.data);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.ant-upload-select-picture-card i {\r\n  font-size: 32px;\r\n  color: #999;\r\n}\r\n\r\n.ant-upload-select-picture-card .ant-upload-text {\r\n  margin-top: 8px;\r\n  color: #666;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}