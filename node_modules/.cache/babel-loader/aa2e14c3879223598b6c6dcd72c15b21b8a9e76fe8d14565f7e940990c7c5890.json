{"ast":null,"code":"import { authMethods } from \"@/state/helpers\";\nimport appConfig from \"../../../../app.config\";\nimport { required, email, helpers } from \"@vuelidate/validators\";\nimport useVuelidate from \"@vuelidate/core\";\nimport Lottie from \"@/components/widgets/lottie.vue\";\nimport animationData from \"@/components/Animation/rhvddzym.json\";\nexport default {\n  components: {\n    lottie: Lottie\n  },\n  setup() {\n    return {\n      v$: useVuelidate()\n    };\n  },\n  validations: {\n    email: {\n      required: helpers.withMessage(\"Email is required\", required),\n      email: helpers.withMessage(\"Please enter valid email\", email)\n    }\n  },\n  page: {\n    title: \"Forgot Password\",\n    meta: [{\n      name: \"description\",\n      content: appConfig.description\n    }]\n  },\n  data() {\n    return {\n      email: \"\",\n      submitted: false,\n      error: null,\n      tryingToReset: false,\n      isResetError: false,\n      defaultOptions: {\n        animationData: animationData\n      }\n    };\n  },\n  methods: {\n    ...authMethods,\n    // Try to register the user in with the email, fullname\n    // and password they provided.\n    tryToReset() {\n      this.submitted = true;\n      // stop here if form is invalid\n      this.v$.$touch();\n      if (this.v$.$invalid) {\n        return;\n      } else {\n        if (process.env.VUE_APP_DEFAULT_AUTH === \"firebase\") {\n          this.tryingToReset = true;\n          // Reset the authError if it existed.\n          this.error = null;\n          return this.resetPassword({\n            email: this.email\n          })\n          // eslint-disable-next-line no-unused-vars\n          .then(token => {\n            this.tryingToReset = false;\n            this.isResetError = false;\n          }).catch(error => {\n            this.tryingToReset = false;\n            this.error = error ? error : \"\";\n            this.isResetError = true;\n          });\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["authMethods","appConfig","required","email","helpers","useVuelidate","Lottie","animationData","components","lottie","setup","v$","validations","withMessage","page","title","meta","name","content","description","data","submitted","error","tryingToReset","isResetError","defaultOptions","methods","tryToReset","$touch","$invalid","process","env","VUE_APP_DEFAULT_AUTH","resetPassword","then","token","catch"],"sources":["D:\\HINET_1\\BacKan\\client\\src\\views\\dashboard\\account\\forgot-password.vue"],"sourcesContent":["<script>\r\nimport { authMethods } from \"@/state/helpers\";\r\nimport appConfig from \"../../../../app.config\";\r\n\r\nimport { required, email, helpers } from \"@vuelidate/validators\";\r\nimport useVuelidate from \"@vuelidate/core\";\r\nimport Lottie from \"@/components/widgets/lottie.vue\";\r\n\r\nimport animationData from \"@/components/Animation/rhvddzym.json\";\r\nexport default {\r\n  components: { lottie: Lottie },\r\n  setup() {\r\n    return { v$: useVuelidate() };\r\n  },\r\n  validations: {\r\n    email: {\r\n      required: helpers.withMessage(\"Email is required\", required),\r\n      email: helpers.withMessage(\"Please enter valid email\", email),\r\n    },\r\n  },\r\n  page: {\r\n    title: \"Forgot Password\",\r\n    meta: [\r\n      {\r\n        name: \"description\",\r\n        content: appConfig.description,\r\n      },\r\n    ],\r\n  },\r\n  data() {\r\n    return {\r\n      email: \"\",\r\n      submitted: false,\r\n      error: null,\r\n      tryingToReset: false,\r\n      isResetError: false,\r\n      defaultOptions: { animationData: animationData },\r\n    };\r\n  },\r\n  methods: {\r\n    ...authMethods,\r\n    // Try to register the user in with the email, fullname\r\n    // and password they provided.\r\n    tryToReset() {\r\n      this.submitted = true;\r\n      // stop here if form is invalid\r\n      this.v$.$touch();\r\n\r\n      if (this.v$.$invalid) {\r\n        return;\r\n      } else {\r\n        if (process.env.VUE_APP_DEFAULT_AUTH === \"firebase\") {\r\n          this.tryingToReset = true;\r\n          // Reset the authError if it existed.\r\n          this.error = null;\r\n          return (\r\n            this.resetPassword({\r\n              email: this.email,\r\n            })\r\n              // eslint-disable-next-line no-unused-vars\r\n              .then((token) => {\r\n                this.tryingToReset = false;\r\n                this.isResetError = false;\r\n              })\r\n              .catch((error) => {\r\n                this.tryingToReset = false;\r\n                this.error = error ? error : \"\";\r\n                this.isResetError = true;\r\n              })\r\n          );\r\n        }\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"auth-page-wrapper pt-5\">\r\n    <div class=\"auth-one-bg-position auth-one-bg\" id=\"auth-particles\">\r\n      <div class=\"bg-overlay\"></div>\r\n\r\n      <div class=\"shape\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\r\n          viewBox=\"0 0 1440 120\">\r\n          <path d=\"M 0,36 C 144,53.6 432,123.2 720,124 C 1008,124.8 1296,56.8 1440,40L1440 140L0 140z\"></path>\r\n        </svg>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"auth-page-content\">\r\n      <b-container>\r\n        <b-row>\r\n          <b-col lg=\"12\">\r\n            <div class=\"text-center mt-sm-5 mb-4 text-white-50\">\r\n              <div>\r\n                <router-link to=\"/\" class=\"d-inline-block auth-logo\">\r\n                  <img src=\"@/assets/images/logo-light.png\" alt=\"\" height=\"20\" />\r\n                </router-link>\r\n              </div>\r\n              <p class=\"mt-3 fs-15 fw-medium\">\r\n                Premium Admin & Dashboard Template\r\n              </p>\r\n            </div>\r\n          </b-col>\r\n        </b-row>\r\n\r\n        <b-row class=\"justify-content-center\">\r\n          <b-col md=\"8\" lg=\"6\" xl=\"5\">\r\n            <b-card no-body class=\"mt-4\">\r\n              <b-card-body class=\"p-4\">\r\n                <div class=\"text-center mt-2\">\r\n                  <h5 class=\"text-primary\">Forgot Password?</h5>\r\n                  <p class=\"text-muted\">Reset password with velzon</p>\r\n\r\n                  <lottie class=\"avatar-xl\" colors=\"primary:#0ab39c,secondary:#405189\" :options=\"defaultOptions\"\r\n                    :height=\"120\" :width=\"120\" />\r\n\r\n                </div>\r\n\r\n                <div class=\"p-2\">\r\n                  <b-alert v-model=\"isResetError\" class=\"mb-4\" variant=\"danger\" dismissible>{{ error }}</b-alert>\r\n                  <form @submit.prevent=\"tryToReset\">\r\n                    <div class=\"mb-4\">\r\n                      <label class=\"form-label\">Email</label>\r\n                      <input type=\"email\" v-model=\"email\" class=\"form-control\" id=\"email\"\r\n                        :class=\"{ 'is-invalid': submitted && v$.email.$errors }\" placeholder=\"Enter Email\" />\r\n                      <div v-for=\"(item, index) in v$.email.$errors\" :key=\"index\" class=\"invalid-feedback\">\r\n                        <span v-if=\"item.$message\">{{ item.$message }}</span>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"text-center mt-4\">\r\n                      <b-button variant=\"success\" class=\"w-100\" type=\"submit\">\r\n                        Send Reset Link\r\n                      </b-button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </b-card-body>\r\n            </b-card>\r\n\r\n            <div class=\"mt-4 text-center\">\r\n              <p class=\"mb-0\">\r\n                Wait, I remember my password...\r\n                <router-link to=\"/login\" class=\"fw-semibold text-primary text-decoration-underline\">\r\n                  Click here\r\n                </router-link>\r\n              </p>\r\n            </div>\r\n          </b-col>\r\n        </b-row>\r\n      </b-container>\r\n    </div>\r\n\r\n    <footer class=\"footer\">\r\n      <b-container>\r\n        <b-row>\r\n          <b-col lg=\"12\">\r\n            <div class=\"text-center\">\r\n              <p class=\"mb-0 text-muted\">\r\n                &copy; {{ new Date().getFullYear() }} Velzon. Crafted with\r\n                <i class=\"mdi mdi-heart text-danger\"></i> by Themesbrand\r\n              </p>\r\n            </div>\r\n          </b-col>\r\n        </b-row>\r\n      </b-container>\r\n    </footer>\r\n  </div>\r\n</template>\r\n"],"mappings":"AACA,SAASA,WAAU,QAAS,iBAAiB;AAC7C,OAAOC,SAAQ,MAAO,wBAAwB;AAE9C,SAASC,QAAQ,EAAEC,KAAK,EAAEC,OAAM,QAAS,uBAAuB;AAChE,OAAOC,YAAW,MAAO,iBAAiB;AAC1C,OAAOC,MAAK,MAAO,iCAAiC;AAEpD,OAAOC,aAAY,MAAO,sCAAsC;AAChE,eAAe;EACbC,UAAU,EAAE;IAAEC,MAAM,EAAEH;EAAO,CAAC;EAC9BI,KAAKA,CAAA,EAAG;IACN,OAAO;MAAEC,EAAE,EAAEN,YAAY,CAAC;IAAE,CAAC;EAC/B,CAAC;EACDO,WAAW,EAAE;IACXT,KAAK,EAAE;MACLD,QAAQ,EAAEE,OAAO,CAACS,WAAW,CAAC,mBAAmB,EAAEX,QAAQ,CAAC;MAC5DC,KAAK,EAAEC,OAAO,CAACS,WAAW,CAAC,0BAA0B,EAAEV,KAAK;IAC9D;EACF,CAAC;EACDW,IAAI,EAAE;IACJC,KAAK,EAAE,iBAAiB;IACxBC,IAAI,EAAE,CACJ;MACEC,IAAI,EAAE,aAAa;MACnBC,OAAO,EAAEjB,SAAS,CAACkB;IACrB,CAAC;EAEL,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLjB,KAAK,EAAE,EAAE;MACTkB,SAAS,EAAE,KAAK;MAChBC,KAAK,EAAE,IAAI;MACXC,aAAa,EAAE,KAAK;MACpBC,YAAY,EAAE,KAAK;MACnBC,cAAc,EAAE;QAAElB,aAAa,EAAEA;MAAc;IACjD,CAAC;EACH,CAAC;EACDmB,OAAO,EAAE;IACP,GAAG1B,WAAW;IACd;IACA;IACA2B,UAAUA,CAAA,EAAG;MACX,IAAI,CAACN,SAAQ,GAAI,IAAI;MACrB;MACA,IAAI,CAACV,EAAE,CAACiB,MAAM,CAAC,CAAC;MAEhB,IAAI,IAAI,CAACjB,EAAE,CAACkB,QAAQ,EAAE;QACpB;MACF,OAAO;QACL,IAAIC,OAAO,CAACC,GAAG,CAACC,oBAAmB,KAAM,UAAU,EAAE;UACnD,IAAI,CAACT,aAAY,GAAI,IAAI;UACzB;UACA,IAAI,CAACD,KAAI,GAAI,IAAI;UACjB,OACE,IAAI,CAACW,aAAa,CAAC;YACjB9B,KAAK,EAAE,IAAI,CAACA;UACd,CAAC;UACC;UAAA,CACC+B,IAAI,CAAEC,KAAK,IAAK;YACf,IAAI,CAACZ,aAAY,GAAI,KAAK;YAC1B,IAAI,CAACC,YAAW,GAAI,KAAK;UAC3B,CAAC,EACAY,KAAK,CAAEd,KAAK,IAAK;YAChB,IAAI,CAACC,aAAY,GAAI,KAAK;YAC1B,IAAI,CAACD,KAAI,GAAIA,KAAI,GAAIA,KAAI,GAAI,EAAE;YAC/B,IAAI,CAACE,YAAW,GAAI,IAAI;UAC1B,CAAC;QAEP;MACF;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}