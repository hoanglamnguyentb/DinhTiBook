{"ast":null,"code":"import APIService from \"@/helpers/ApiService\";\nimport ThongTinDanhMuc from \"./ThongTinDanhMuc.vue\";\nexport default {\n  created() {\n    this.getListDropdownDM();\n  },\n  data() {\n    return {\n      lstDanhMuc: [],\n      selectedDanhMuc: null,\n      isLoading: false,\n      open: false,\n      labelCol: {\n        span: 6\n      },\n      wrapperCol: {\n        span: 14\n      },\n      id: undefined,\n      thongTinDanhMuc: {\n        maThongTin: '',\n        maDanhMuc: '',\n        tenDanhMuc: '',\n        thuTuHienThi: '',\n        giaTri: '',\n        ghiChu: '',\n        tepDinhKem: ''\n      },\n      rules: {\n        selectedDanhMuc: [{\n          required: true,\n          message: 'Vui lòng chọn một danh mục',\n          trigger: 'change'\n        }],\n        maThongTin: [{\n          required: true,\n          message: 'Mã thông tin danh mục là bắt buộc',\n          trigger: 'change'\n        }, {\n          min: 1,\n          max: 20,\n          message: 'Độ dài từ 3-20',\n          trigger: 'blur'\n        }],\n        thuTuHienThi: [{\n          type: 'integer',\n          message: 'Thứ tự hiển thị phải là một số nguyên',\n          trigger: 'blur'\n        }],\n        ghiChu: [{\n          required: false\n        }]\n      }\n    };\n  },\n  methods: {\n    async showModal(id) {\n      this.open = true;\n      if (id) {\n        console.log(this.id);\n        var res = await APIService.get(`/ThongTinDanhMuc/${id}`);\n        this.id = id;\n        console.log(this.id);\n        this.thongTinDanhMuc = res.data.data;\n      }\n    },\n    closeModal() {\n      this.open = false;\n      this.id = undefined;\n      this.resetForm();\n    },\n    handleChangeSelect(selectedValue) {\n      this.thongTinDanhMuc.maDanhMuc = selectedValue;\n    },\n    handleOk() {\n      this.$refs.formRef.validate().then(async () => {\n        var duplicateCategory = false;\n        var duplicateOrder = false;\n        if (this.id) {\n          this.isLoading = true;\n          var response = await APIService.put(`/ThongTinDanhMuc/edit/${this.id}`, this.thongTinDanhMuc);\n          duplicateCategory = response.data.message == \"Mã bị trùng\" ? true : false;\n          duplicateOrder = response.data.message == \"Thứ tự hiển thị bị trùng\" ? true : false;\n        } else {\n          this.isLoading = true;\n          var response = await APIService.post(\"/ThongTinDanhMuc/create\", this.thongTinDanhMuc);\n          duplicateCategory = response.data.message == \"Mã bị trùng\" ? true : false;\n          duplicateOrder = response.data.message == \"Thứ tự hiển thị bị trùng\" ? true : false;\n        }\n        if (duplicateCategory == false && duplicateOrder == false) {\n          this.closeModal();\n          this.$message.success(\"Thành công\");\n          this.$emit('addSuccess');\n        } else if (duplicateCategory) {\n          this.isLoading = false;\n          this.$message.error(\"Trùng mã thông tin danh mục\");\n        } else {\n          this.isLoading = false;\n          this.$message.error(\"Trùng thứ tự hiển thị\");\n        }\n      }).catch(error => {\n        console.log('error', error);\n      }).finally(() => {\n        this.isLoading = false;\n      });\n    },\n    resetForm() {\n      this.$refs.formRef.resetFields();\n      this.thongTinDanhMuc = {\n        maThongTin: '',\n        maDanhMuc: '',\n        tenDanhMuc: '',\n        thuTuHienThi: '',\n        giaTri: '',\n        ghiChu: '',\n        tepDinhKem: ''\n      };\n    },\n    async getListDropdownDM() {\n      try {\n        // Gọi API để lấy danh sách các danh mục từ cơ sở dữ liệu\n        const response = (await APIService.get('/DanhMuc/GetDataByPage')).data;\n        this.lstDanhMuc = response.data.items;\n      } catch (error) {\n        console.error('Error fetching categories:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["APIService","ThongTinDanhMuc","created","getListDropdownDM","data","lstDanhMuc","selectedDanhMuc","isLoading","open","labelCol","span","wrapperCol","id","undefined","thongTinDanhMuc","maThongTin","maDanhMuc","tenDanhMuc","thuTuHienThi","giaTri","ghiChu","tepDinhKem","rules","required","message","trigger","min","max","type","methods","showModal","console","log","res","get","closeModal","resetForm","handleChangeSelect","selectedValue","handleOk","$refs","formRef","validate","then","duplicateCategory","duplicateOrder","response","put","post","$message","success","$emit","error","catch","finally","resetFields","items"],"sources":["D:\\HINET_1\\BacKan\\client\\src\\views\\dashboard\\QL_ThongTinDanhMuc\\ModalAddEditTTDM.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <a-modal v-model:open=\"open\" :title=\"id ? 'Cập nhật thông tin' : 'Thêm thông tin danh mục'\" @ok=\"handleOk\"\r\n            @cancel=\"closeModal\" :confirm-loading=\"isLoading\">\r\n            <a-form ref=\"formRef\" :model=\"thongTinDanhMuc\" :rules=\"rules\" layout=\"vertical\">\r\n                <a-form-item ref=\"ten\"  label=\"Tên danh mục\" :rules=\"rules.selectedDanhMuc\">\r\n                    <a-select style=\"width: 200px;\" v-model:value=\"thongTinDanhMuc.maDanhMuc\" autoClearSearchValue=true @change=\"handleChangeSelect\">\r\n                        <a-select-option v-for=\"item in lstDanhMuc\" :key=\"item.maDM\" :value=\"item.maDM\">{{\r\n            item.tenDanhMuc }}</a-select-option>\r\n                    </a-select>\r\n                </a-form-item>\r\n                <a-form-item ref=\"thutu\" label=\"Thứ tự hiển thị\" name=\"thuTuHienThi\">\r\n                    <a-input-number v-model:value=\"thongTinDanhMuc.thuTuHienThi\" />\r\n                </a-form-item>\r\n                <a-form-item ref=\"ma\" label=\"Mã thông tin\" name=\"maThongTin\">\r\n                    <a-input v-model:value=\"thongTinDanhMuc.maThongTin\" />\r\n                </a-form-item>\r\n                <a-form-item ref=\"giaTri\" label=\"Giá trị\" name=\"giaTri\">\r\n                    <a-textarea v-model:value=\"thongTinDanhMuc.giaTri\" />\r\n                </a-form-item>\r\n                <a-form-item ref=\"ghiChu\" label=\"Ghi chú\" name=\"ghiChu\">\r\n                    <a-textarea v-model:value=\"thongTinDanhMuc.ghiChu\" />\r\n                </a-form-item>\r\n            </a-form>\r\n        </a-modal>\r\n    </div>\r\n</template>\r\n<script>\r\nimport APIService from \"@/helpers/ApiService\"\r\nimport ThongTinDanhMuc from \"./ThongTinDanhMuc.vue\";\r\n\r\nexport default {\r\n    created() {\r\n        this.getListDropdownDM()\r\n    },\r\n\r\n    data() {\r\n        return {\r\n            lstDanhMuc: [],\r\n            selectedDanhMuc: null,\r\n            isLoading: false,\r\n            open: false,\r\n            labelCol: {\r\n                span: 6,\r\n            },\r\n            wrapperCol: {\r\n                span: 14,\r\n            },\r\n            id: undefined,\r\n            thongTinDanhMuc: {\r\n                maThongTin:'',\r\n                maDanhMuc: '',\r\n                tenDanhMuc: '',\r\n                thuTuHienThi: '',\r\n                giaTri: '',\r\n                ghiChu: '',\r\n                tepDinhKem: '',\r\n            },\r\n            rules: {\r\n                selectedDanhMuc: [\r\n\r\n                    { required: true, message: 'Vui lòng chọn một danh mục', trigger: 'change' },\r\n\r\n\r\n                ],\r\n                maThongTin: [\r\n                    {\r\n                        required: true,\r\n                        message: 'Mã thông tin danh mục là bắt buộc',\r\n                        trigger: 'change',\r\n                    },\r\n                    {\r\n                        min: 1,\r\n                        max: 20,\r\n                        message: 'Độ dài từ 3-20',\r\n                        trigger: 'blur',\r\n                    },\r\n                ],\r\n                thuTuHienThi: [\r\n\r\n                    {\r\n                        type: 'integer',\r\n                        message: 'Thứ tự hiển thị phải là một số nguyên',\r\n                        trigger: 'blur',\r\n                    }\r\n                ],\r\n                ghiChu: [\r\n                    { required: false }\r\n                ]\r\n\r\n            },\r\n        };\r\n    },\r\n    methods: {\r\n        async showModal(id) {\r\n            this.open = true\r\n            if (id) {\r\n                console.log(this.id)\r\n                var res = await APIService.get(`/ThongTinDanhMuc/${id}`)\r\n                this.id = id\r\n                console.log(this.id)\r\n                this.thongTinDanhMuc = res.data.data\r\n            }\r\n\r\n        },\r\n        closeModal() {\r\n            this.open = false\r\n            this.id = undefined\r\n            \r\n            this.resetForm()\r\n        },\r\n        handleChangeSelect(selectedValue) {\r\n            this.thongTinDanhMuc.maDanhMuc= selectedValue\r\n            \r\n        },\r\n        handleOk() {\r\n            this.$refs.formRef.validate().then(async () => {\r\n\r\n                var duplicateCategory = false\r\n                var duplicateOrder = false\r\n                if (this.id) {\r\n                    this.isLoading = true;\r\n                    var response = await APIService.put(`/ThongTinDanhMuc/edit/${this.id}`, this.thongTinDanhMuc)\r\n\r\n                    duplicateCategory = response.data.message == \"Mã bị trùng\" ? true : false;\r\n                    duplicateOrder = response.data.message == \"Thứ tự hiển thị bị trùng\" ? true : false;\r\n\r\n\r\n                } else {\r\n                    this.isLoading = true;\r\n                    var response = await APIService.post(\"/ThongTinDanhMuc/create\", this.thongTinDanhMuc)\r\n                    duplicateCategory = response.data.message == \"Mã bị trùng\" ? true : false;\r\n                    duplicateOrder = response.data.message == \"Thứ tự hiển thị bị trùng\" ? true : false;\r\n\r\n\r\n                }\r\n                if (duplicateCategory == false && duplicateOrder == false) {\r\n\r\n                    this.closeModal()\r\n                    this.$message.success(\"Thành công\")\r\n                    this.$emit('addSuccess')\r\n\r\n                } else if (duplicateCategory) {\r\n                    this.isLoading = false\r\n                    this.$message.error(\"Trùng mã thông tin danh mục\")\r\n                } else {\r\n                    this.isLoading = false\r\n                    this.$message.error(\"Trùng thứ tự hiển thị\")\r\n                }\r\n\r\n\r\n\r\n            }).catch(error => {\r\n                console.log('error', error);\r\n            }).finally(() => {\r\n                this.isLoading = false;\r\n            })\r\n        },\r\n        resetForm() {\r\n            this.$refs.formRef.resetFields();\r\n            this.thongTinDanhMuc= {\r\n                maThongTin:'',\r\n                maDanhMuc: '',\r\n                tenDanhMuc: '',\r\n                thuTuHienThi: '',\r\n                giaTri: '',\r\n                ghiChu: '',\r\n                tepDinhKem: '',\r\n            }\r\n        },\r\n        async getListDropdownDM() {\r\n            try {\r\n                // Gọi API để lấy danh sách các danh mục từ cơ sở dữ liệu\r\n                const response = (await APIService.get('/DanhMuc/GetDataByPage')).data;\r\n                this.lstDanhMuc = response.data.items\r\n\r\n            } catch (error) {\r\n                console.error('Error fetching categories:', error);\r\n            }\r\n        }\r\n    },\r\n\r\n}\r\n\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}