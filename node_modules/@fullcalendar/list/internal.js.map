{"version":3,"file":"internal.js","sources":["../src/ListViewHeaderRow.tsx","../src/ListViewEventRow.tsx","../src/ListView.tsx"],"sourcesContent":["import { DayHeaderContentArg } from '@fullcalendar/core'\nimport {\n  BaseComponent, DateMarker, DateRange, getDateMeta,\n  getDayClassNames, formatDayString, buildNavLinkAttrs, getUniqueDomId, ContentContainer,\n} from '@fullcalendar/core/internal'\nimport { createElement, Fragment } from '@fullcalendar/core/preact'\n\nexport interface ListViewHeaderRowProps {\n  cellId: string\n  dayDate: DateMarker\n  todayRange: DateRange\n}\n\nexport class ListViewHeaderRow extends BaseComponent<ListViewHeaderRowProps> {\n  state = {\n    textId: getUniqueDomId(),\n  }\n\n  render() {\n    let { theme, dateEnv, options, viewApi } = this.context\n    let { cellId, dayDate, todayRange } = this.props\n    let { textId } = this.state\n    let dayMeta = getDateMeta(dayDate, todayRange)\n\n    // will ever be falsy?\n    let text = options.listDayFormat ? dateEnv.format(dayDate, options.listDayFormat) : ''\n\n    // will ever be falsy? also, BAD NAME \"alt\"\n    let sideText = options.listDaySideFormat ? dateEnv.format(dayDate, options.listDaySideFormat) : ''\n\n    let renderProps: RenderProps = {\n      date: dateEnv.toDate(dayDate),\n      view: viewApi,\n      textId,\n      text,\n      sideText,\n      navLinkAttrs: buildNavLinkAttrs(this.context, dayDate),\n      sideNavLinkAttrs: buildNavLinkAttrs(this.context, dayDate, 'day', false),\n      ...dayMeta,\n    }\n\n    // TODO: make a reusable HOC for dayHeader (used in daygrid/timegrid too)\n    return (\n      <ContentContainer\n        elTag=\"tr\"\n        elClasses={[\n          'fc-list-day',\n          ...getDayClassNames(dayMeta, theme),\n        ]}\n        elAttrs={{\n          'data-date': formatDayString(dayDate),\n        }}\n        renderProps={renderProps}\n        generatorName=\"dayHeaderContent\"\n        generator={options.dayHeaderContent || renderInnerContent}\n        classNameGenerator={options.dayHeaderClassNames}\n        didMount={options.dayHeaderDidMount}\n        willUnmount={options.dayHeaderWillUnmount}\n      >\n        {(InnerContent) => ( // TODO: force-hide top border based on :first-child\n          <th scope=\"colgroup\" colSpan={3} id={cellId} aria-labelledby={textId}>\n            <InnerContent\n              elTag=\"div\"\n              elClasses={[\n                'fc-list-day-cushion',\n                theme.getClass('tableCellShaded'),\n              ]}\n            />\n          </th>\n        )}\n      </ContentContainer>\n    )\n  }\n}\n\n// doesn't enforce much since DayCellContentArg allow extra props\ninterface RenderProps extends DayHeaderContentArg {\n  textId: string // for aria-labelledby\n  text: string\n  sideText: string\n}\n\nfunction renderInnerContent(props: RenderProps) {\n  return (\n    <Fragment>\n      {props.text && (\n        <a id={props.textId} className=\"fc-list-day-text\" {...props.navLinkAttrs}>\n          {props.text}\n        </a>\n      )}\n      {props.sideText && (/* not keyboard tabbable */\n        <a aria-hidden className=\"fc-list-day-side-text\" {...props.sideNavLinkAttrs}>\n          {props.sideText}\n        </a>\n      )}\n    </Fragment>\n  )\n}\n","import { AllDayContentArg } from '@fullcalendar/core'\nimport {\n  MinimalEventProps, BaseComponent, ViewContext,\n  Seg, isMultiDayRange, DateFormatter, buildSegTimeText, createFormatter,\n  getSegAnchorAttrs, EventContainer, ContentContainer,\n} from '@fullcalendar/core/internal'\nimport {\n  createElement,\n  ComponentChildren,\n  Fragment,\n  ComponentChild,\n} from '@fullcalendar/core/preact'\n\nconst DEFAULT_TIME_FORMAT = createFormatter({\n  hour: 'numeric',\n  minute: '2-digit',\n  meridiem: 'short',\n})\n\nexport interface ListViewEventRowProps extends MinimalEventProps {\n  timeHeaderId: string\n  eventHeaderId: string\n  dateHeaderId: string\n}\n\nexport class ListViewEventRow extends BaseComponent<ListViewEventRowProps> {\n  render() {\n    let { props, context } = this\n    let { options } = context\n    let { seg, timeHeaderId, eventHeaderId, dateHeaderId } = props\n    let timeFormat = options.eventTimeFormat || DEFAULT_TIME_FORMAT\n\n    return (\n      <EventContainer\n        {...props}\n        elTag=\"tr\"\n        elClasses={[\n          'fc-list-event',\n          seg.eventRange.def.url && 'fc-event-forced-url',\n        ]}\n        defaultGenerator={() => renderEventInnerContent(seg, context) /* weird */}\n        seg={seg}\n        timeText=\"\"\n        disableDragging={true}\n        disableResizing={true}\n      >\n        {(InnerContent, eventContentArg) => (\n          <Fragment>\n            {buildTimeContent(seg, timeFormat, context, timeHeaderId, dateHeaderId)}\n            <td aria-hidden className=\"fc-list-event-graphic\">\n              <span\n                className=\"fc-list-event-dot\"\n                style={{\n                  borderColor: eventContentArg.borderColor || eventContentArg.backgroundColor,\n                }}\n              />\n            </td>\n            <InnerContent\n              elTag=\"td\"\n              elClasses={['fc-list-event-title']}\n              elAttrs={{ headers: `${eventHeaderId} ${dateHeaderId}` }}\n            />\n          </Fragment>\n        )}\n      </EventContainer>\n    )\n  }\n}\n\nfunction renderEventInnerContent(seg: Seg, context: ViewContext) {\n  let interactiveAttrs = getSegAnchorAttrs(seg, context)\n  return (\n    <a {...interactiveAttrs}>\n      {/* TODO: document how whole row become clickable */}\n      {seg.eventRange.def.title}\n    </a>\n  )\n}\n\nfunction buildTimeContent(\n  seg: Seg,\n  timeFormat: DateFormatter,\n  context: ViewContext,\n  timeHeaderId: string,\n  dateHeaderId: string,\n): ComponentChildren {\n  let { options } = context\n\n  if (options.displayEventTime !== false) {\n    let eventDef = seg.eventRange.def\n    let eventInstance = seg.eventRange.instance\n    let doAllDay = false\n    let timeText: string\n\n    if (eventDef.allDay) {\n      doAllDay = true\n    } else if (isMultiDayRange(seg.eventRange.range)) { // TODO: use (!isStart || !isEnd) instead?\n      if (seg.isStart) {\n        timeText = buildSegTimeText(\n          seg,\n          timeFormat,\n          context,\n          null,\n          null,\n          eventInstance.range.start,\n          seg.end,\n        )\n      } else if (seg.isEnd) {\n        timeText = buildSegTimeText(\n          seg,\n          timeFormat,\n          context,\n          null,\n          null,\n          seg.start,\n          eventInstance.range.end,\n        )\n      } else {\n        doAllDay = true\n      }\n    } else {\n      timeText = buildSegTimeText(\n        seg,\n        timeFormat,\n        context,\n      )\n    }\n\n    if (doAllDay) {\n      let renderProps: AllDayContentArg = {\n        text: context.options.allDayText,\n        view: context.viewApi,\n      }\n\n      return (\n        <ContentContainer\n          elTag=\"td\"\n          elClasses={['fc-list-event-time']}\n          elAttrs={{\n            headers: `${timeHeaderId} ${dateHeaderId}`,\n          }}\n          renderProps={renderProps}\n          generatorName=\"allDayContent\"\n          generator={options.allDayContent || renderAllDayInner}\n          classNameGenerator={options.allDayClassNames}\n          didMount={options.allDayDidMount}\n          willUnmount={options.allDayWillUnmount}\n        />\n      )\n    }\n\n    return (\n      <td className=\"fc-list-event-time\">\n        {timeText}\n      </td>\n    )\n  }\n\n  return null\n}\n\nfunction renderAllDayInner(renderProps: AllDayContentArg): ComponentChild {\n  return renderProps.text\n}\n","import { ViewApi, EventRenderRange } from '@fullcalendar/core'\nimport {\n  ViewProps,\n  Scroller,\n  DateMarker,\n  addDays,\n  startOfDay,\n  DateRange,\n  intersectRanges,\n  DateProfile,\n  EventUiHash,\n  sliceEventStore,\n  EventStore,\n  memoize,\n  Seg,\n  sortEventSegs,\n  getSegMeta,\n  NowTimer,\n  ViewContainer,\n  DateComponent,\n  MountArg,\n  getUniqueDomId,\n  formatDayString,\n  ContentContainer,\n} from '@fullcalendar/core/internal'\nimport {\n  ComponentChild,\n  createElement,\n  VNode,\n} from '@fullcalendar/core/preact'\nimport { ListViewHeaderRow } from './ListViewHeaderRow.js'\nimport { ListViewEventRow } from './ListViewEventRow.js'\n\nexport interface NoEventsContentArg {\n  text: string\n  view: ViewApi\n}\n\nexport type NoEventsMountArg = MountArg<NoEventsContentArg>\n\n/*\nResponsible for the scroller, and forwarding event-related actions into the \"grid\".\n*/\nexport class ListView extends DateComponent<ViewProps> {\n  private computeDateVars = memoize(computeDateVars)\n  private eventStoreToSegs = memoize(this._eventStoreToSegs)\n  state = {\n    timeHeaderId: getUniqueDomId(),\n    eventHeaderId: getUniqueDomId(),\n    dateHeaderIdRoot: getUniqueDomId(),\n  }\n\n  render() {\n    let { props, context } = this\n    let { dayDates, dayRanges } = this.computeDateVars(props.dateProfile)\n    let eventSegs = this.eventStoreToSegs(props.eventStore, props.eventUiBases, dayRanges)\n\n    return (\n      <ViewContainer\n        elRef={this.setRootEl}\n        elClasses={[\n          'fc-list',\n          context.theme.getClass('table'), // just for the outer border. will be on div\n          context.options.stickyHeaderDates !== false ?\n            'fc-list-sticky' :\n            '',\n        ]}\n        viewSpec={context.viewSpec}\n      >\n        <Scroller\n          liquid={!props.isHeightAuto}\n          overflowX={props.isHeightAuto ? 'visible' : 'hidden'}\n          overflowY={props.isHeightAuto ? 'visible' : 'auto'}\n        >\n          {eventSegs.length > 0 ?\n            this.renderSegList(eventSegs, dayDates) :\n            this.renderEmptyMessage()}\n        </Scroller>\n      </ViewContainer>\n    )\n  }\n\n  setRootEl = (rootEl: HTMLElement | null) => {\n    if (rootEl) {\n      this.context.registerInteractiveComponent(this, { // TODO: make aware that it doesn't do Hits\n        el: rootEl,\n      })\n    } else {\n      this.context.unregisterInteractiveComponent(this)\n    }\n  }\n\n  renderEmptyMessage() {\n    let { options, viewApi } = this.context\n    let renderProps: NoEventsContentArg = {\n      text: options.noEventsText,\n      view: viewApi,\n    }\n\n    return (\n      <ContentContainer\n        elTag=\"div\"\n        elClasses={['fc-list-empty']}\n        renderProps={renderProps}\n        generatorName=\"noEventsContent\"\n        generator={options.noEventsContent || renderNoEventsInner}\n        classNameGenerator={options.noEventsClassNames}\n        didMount={options.noEventsDidMount}\n        willUnmount={options.noEventsWillUnmount}\n      >\n        {(InnerContent) => (\n          <InnerContent\n            elTag=\"div\"\n            elClasses={['fc-list-empty-cushion']}\n          />\n        )}\n      </ContentContainer>\n    )\n  }\n\n  renderSegList(allSegs: Seg[], dayDates: DateMarker[]) {\n    let { theme, options } = this.context\n    let { timeHeaderId, eventHeaderId, dateHeaderIdRoot } = this.state\n    let segsByDay = groupSegsByDay(allSegs) // sparse array\n\n    return (\n      <NowTimer unit=\"day\">\n        {(nowDate: DateMarker, todayRange: DateRange) => {\n          let innerNodes: VNode[] = []\n\n          for (let dayIndex = 0; dayIndex < segsByDay.length; dayIndex += 1) {\n            let daySegs = segsByDay[dayIndex]\n\n            if (daySegs) { // sparse array, so might be undefined\n              let dayStr = formatDayString(dayDates[dayIndex])\n              let dateHeaderId = dateHeaderIdRoot + '-' + dayStr\n\n              // append a day header\n              innerNodes.push(\n                <ListViewHeaderRow\n                  key={dayStr}\n                  cellId={dateHeaderId}\n                  dayDate={dayDates[dayIndex]}\n                  todayRange={todayRange}\n                />,\n              )\n\n              daySegs = sortEventSegs(daySegs, options.eventOrder)\n\n              for (let seg of daySegs) {\n                innerNodes.push(\n                  <ListViewEventRow\n                    key={dayStr + ':' + seg.eventRange.instance.instanceId /* are multiple segs for an instanceId */}\n                    seg={seg}\n                    isDragging={false}\n                    isResizing={false}\n                    isDateSelecting={false}\n                    isSelected={false}\n                    timeHeaderId={timeHeaderId}\n                    eventHeaderId={eventHeaderId}\n                    dateHeaderId={dateHeaderId}\n                    {...getSegMeta(seg, todayRange, nowDate)}\n                  />,\n                )\n              }\n            }\n          }\n\n          return (\n            <table className={'fc-list-table ' + theme.getClass('table')}>\n              <thead>\n                <tr>\n                  <th scope=\"col\" id={timeHeaderId}>{options.timeHint}</th>\n                  <th scope=\"col\" aria-hidden />\n                  <th scope=\"col\" id={eventHeaderId}>{options.eventHint}</th>\n                </tr>\n              </thead>\n              <tbody>{innerNodes}</tbody>\n            </table>\n          )\n        }}\n      </NowTimer>\n    )\n  }\n\n  _eventStoreToSegs(eventStore: EventStore, eventUiBases: EventUiHash, dayRanges: DateRange[]): Seg[] {\n    return this.eventRangesToSegs(\n      sliceEventStore(\n        eventStore,\n        eventUiBases,\n        this.props.dateProfile.activeRange,\n        this.context.options.nextDayThreshold,\n      ).fg,\n      dayRanges,\n    )\n  }\n\n  eventRangesToSegs(eventRanges: EventRenderRange[], dayRanges: DateRange[]) {\n    let segs = []\n\n    for (let eventRange of eventRanges) {\n      segs.push(...this.eventRangeToSegs(eventRange, dayRanges))\n    }\n\n    return segs\n  }\n\n  eventRangeToSegs(eventRange: EventRenderRange, dayRanges: DateRange[]) {\n    let { dateEnv } = this.context\n    let { nextDayThreshold } = this.context.options\n    let range = eventRange.range\n    let allDay = eventRange.def.allDay\n    let dayIndex\n    let segRange\n    let seg\n    let segs = []\n\n    for (dayIndex = 0; dayIndex < dayRanges.length; dayIndex += 1) {\n      segRange = intersectRanges(range, dayRanges[dayIndex])\n\n      if (segRange) {\n        seg = {\n          component: this,\n          eventRange,\n          start: segRange.start,\n          end: segRange.end,\n          isStart: eventRange.isStart && segRange.start.valueOf() === range.start.valueOf(),\n          isEnd: eventRange.isEnd && segRange.end.valueOf() === range.end.valueOf(),\n          dayIndex,\n        }\n\n        segs.push(seg)\n\n        // detect when range won't go fully into the next day,\n        // and mutate the latest seg to the be the end.\n        if (\n          !seg.isEnd && !allDay &&\n          dayIndex + 1 < dayRanges.length &&\n          range.end <\n            dateEnv.add(\n              dayRanges[dayIndex + 1].start,\n              nextDayThreshold,\n            )\n        ) {\n          seg.end = range.end\n          seg.isEnd = true\n          break\n        }\n      }\n    }\n\n    return segs\n  }\n}\n\nfunction renderNoEventsInner(renderProps: NoEventsContentArg): ComponentChild {\n  return renderProps.text\n}\n\nfunction computeDateVars(dateProfile: DateProfile) {\n  let dayStart = startOfDay(dateProfile.renderRange.start)\n  let viewEnd = dateProfile.renderRange.end\n  let dayDates: DateMarker[] = []\n  let dayRanges: DateRange[] = []\n\n  while (dayStart < viewEnd) {\n    dayDates.push(dayStart)\n\n    dayRanges.push({\n      start: dayStart,\n      end: addDays(dayStart, 1),\n    })\n\n    dayStart = addDays(dayStart, 1)\n  }\n\n  return { dayDates, dayRanges }\n}\n\n// Returns a sparse array of arrays, segs grouped by their dayIndex\nfunction groupSegsByDay(segs): Seg[][] {\n  let segsByDay = [] // sparse array\n  let i\n  let seg\n\n  for (i = 0; i < segs.length; i += 1) {\n    seg = segs[i];\n    (segsByDay[seg.dayIndex] || (segsByDay[seg.dayIndex] = []))\n      .push(seg)\n  }\n\n  return segsByDay\n}\n"],"names":[],"mappings":"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"}