{"version":3,"file":"index.js","sources":["../src/option-refiners.ts","../src/index.ts"],"sourcesContent":["import { ClassNamesGenerator, FormatterInput } from '@fullcalendar/core'\nimport {\n  identity,\n  Identity,\n  CustomContentGenerator,\n  DidMountHandler,\n  WillUnmountHandler,\n  createFormatter,\n  DateFormatter,\n} from '@fullcalendar/core/internal'\nimport {\n  NoEventsContentArg,\n  NoEventsMountArg,\n} from './public-types.js'\n\nexport const OPTION_REFINERS = {\n  listDayFormat: createFalsableFormatter, // defaults specified in list plugins\n  listDaySideFormat: createFalsableFormatter, // \"\n\n  noEventsClassNames: identity as Identity<ClassNamesGenerator<NoEventsContentArg>>,\n  noEventsContent: identity as Identity<CustomContentGenerator<NoEventsContentArg>>,\n  noEventsDidMount: identity as Identity<DidMountHandler<NoEventsMountArg>>,\n  noEventsWillUnmount: identity as Identity<WillUnmountHandler<NoEventsMountArg>>,\n\n  // noEventsText is defined in base options\n}\n\nfunction createFalsableFormatter(input: FormatterInput | false): DateFormatter {\n  return input === false ? null : createFormatter(input)\n}\n","import { createPlugin, PluginDef } from '@fullcalendar/core'\nimport { ListView } from './ListView.js'\nimport { OPTION_REFINERS } from './option-refiners.js'\nimport './ambient.js'\nimport './index.css'\n\nexport default createPlugin({\n  name: '<%= pkgName %>',\n  optionRefiners: OPTION_REFINERS,\n  views: {\n    list: {\n      component: ListView,\n      buttonTextKey: 'list', // what to lookup in locale files\n      listDayFormat: { month: 'long', day: 'numeric', year: 'numeric' }, // like \"January 1, 2016\"\n    },\n    listDay: {\n      type: 'list',\n      duration: { days: 1 },\n      listDayFormat: { weekday: 'long' }, // day-of-week is all we need. full date is probably in headerToolbar\n    },\n    listWeek: {\n      type: 'list',\n      duration: { weeks: 1 },\n      listDayFormat: { weekday: 'long' }, // day-of-week is more important\n      listDaySideFormat: { month: 'long', day: 'numeric', year: 'numeric' },\n    },\n    listMonth: {\n      type: 'list',\n      duration: { month: 1 },\n      listDaySideFormat: { weekday: 'long' }, // day-of-week is nice-to-have\n    },\n    listYear: {\n      type: 'list',\n      duration: { year: 1 },\n      listDaySideFormat: { weekday: 'long' }, // day-of-week is nice-to-have\n    },\n  },\n}) as PluginDef\n\nexport * from './public-types.js'\n"],"names":[],"mappings":";;;;;AAeO,MAAM,eAAe,GAAG;AAC7B,IAAA,aAAa,EAAE,uBAAuB;AACtC,IAAA,iBAAiB,EAAE,uBAAuB;AAE1C,IAAA,kBAAkB,EAAE,QAA6D;AACjF,IAAA,eAAe,EAAE,QAAgE;AACjF,IAAA,gBAAgB,EAAE,QAAuD;AACzE,IAAA,mBAAmB,EAAE,QAA0D;;CAGhF,CAAA;AAED,SAAS,uBAAuB,CAAC,KAA6B,EAAA;AAC5D,IAAA,OAAO,KAAK,KAAK,KAAK,GAAG,IAAI,GAAG,eAAe,CAAC,KAAK,CAAC,CAAA;AACxD;;;;;ACvBA,YAAe,YAAY,CAAC;AAC1B,IAAA,IAAI,EAAE,oBAAgB;AACtB,IAAA,cAAc,EAAE,eAAe;AAC/B,IAAA,KAAK,EAAE;AACL,QAAA,IAAI,EAAE;AACJ,YAAA,SAAS,EAAE,QAAQ;AACnB,YAAA,aAAa,EAAE,MAAM;AACrB,YAAA,aAAa,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE;AAClE,SAAA;AACD,QAAA,OAAO,EAAE;AACP,YAAA,IAAI,EAAE,MAAM;AACZ,YAAA,QAAQ,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE;AACrB,YAAA,aAAa,EAAE,EAAE,OAAO,EAAE,MAAM,EAAE;AACnC,SAAA;AACD,QAAA,QAAQ,EAAE;AACR,YAAA,IAAI,EAAE,MAAM;AACZ,YAAA,QAAQ,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE;AACtB,YAAA,aAAa,EAAE,EAAE,OAAO,EAAE,MAAM,EAAE;AAClC,YAAA,iBAAiB,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE;AACtE,SAAA;AACD,QAAA,SAAS,EAAE;AACT,YAAA,IAAI,EAAE,MAAM;AACZ,YAAA,QAAQ,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE;AACtB,YAAA,iBAAiB,EAAE,EAAE,OAAO,EAAE,MAAM,EAAE;AACvC,SAAA;AACD,QAAA,QAAQ,EAAE;AACR,YAAA,IAAI,EAAE,MAAM;AACZ,YAAA,QAAQ,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE;AACrB,YAAA,iBAAiB,EAAE,EAAE,OAAO,EAAE,MAAM,EAAE;AACvC,SAAA;AACF,KAAA;AACF,CAAA,CAAc;;;;"}